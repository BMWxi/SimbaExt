unit MatrixMath;
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]
 Copyright (c) 2013, Jarl K. <Slacky> Holta || http://github.com/WarPie
 All rights reserved.
 For more info see: Copyright.txt
[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
(* Defines a set of operators used on matrices. *)

{$mode objfpc}{$H+}
{$macro on}
{$inline on}

interface

uses 
  CoreTypes, SysUtils, Math, CoreMath;

type
  T2DExtended = Array of Array of Extended;
  T2DDouble   = Array of Array of Double;
  T2DSingle   = Array of Array of Single;
  T2DUInt64   = Array of Array of UInt64;
  T2DInt64    = Array of Array of Int64;
  T2DUInt32   = Array of Array of UInt32;
  T2DInt32    = Array of Array of Int32;
  T2DUInt8    = Array of Array of UInt8;
  T2DInt8     = Array of Array of Int8;


Operator + (l: T2DExtended; r: T2DExtended): T2DExtended; 
Operator + (l: T2DDouble; r: T2DDouble): T2DDouble; 
Operator + (l: T2DSingle; r: T2DSingle): T2DSingle; 
Operator + (l: T2DUInt64; r: T2DUInt64): T2DUInt64; 
Operator + (l: T2DInt64; r: T2DInt64): T2DInt64; 
Operator + (l: T2DUInt32; r: T2DUInt32): T2DUInt32; 
Operator + (l: T2DInt32; r: T2DInt32): T2DInt32; 
Operator + (l: T2DUInt8; r: T2DUInt8): T2DUInt8; 
Operator + (l: T2DInt8; r: T2DInt8): T2DInt8; 
Operator + (l: T2DExtended; r: T2DDouble): T2DExtended; 
Operator + (l: T2DExtended; r: T2DSingle): T2DExtended; 
Operator + (l: T2DExtended; r: T2DUInt64): T2DExtended; 
Operator + (l: T2DExtended; r: T2DInt64): T2DExtended; 
Operator + (l: T2DExtended; r: T2DUInt32): T2DExtended; 
Operator + (l: T2DExtended; r: T2DInt32): T2DExtended; 
Operator + (l: T2DExtended; r: T2DUInt8): T2DExtended; 
Operator + (l: T2DExtended; r: T2DInt8): T2DExtended; 
Operator + (l: T2DExtended; r: Extended): T2DExtended; 
Operator + (l: T2DExtended; r: Double): T2DExtended; 
Operator + (l: T2DExtended; r: Single): T2DExtended; 
Operator + (l: T2DExtended; r: UInt64): T2DExtended; 
Operator + (l: T2DExtended; r: Int64): T2DExtended; 
Operator + (l: T2DExtended; r: UInt32): T2DExtended; 
Operator + (l: T2DExtended; r: Int32): T2DExtended; 
Operator + (l: T2DExtended; r: UInt8): T2DExtended; 
Operator + (l: T2DExtended; r: Int8): T2DExtended; 
Operator + (l: T2DDouble; r: T2DExtended): T2DExtended; 
Operator + (l: T2DDouble; r: T2DSingle): T2DDouble; 
Operator + (l: T2DDouble; r: T2DUInt64): T2DDouble; 
Operator + (l: T2DDouble; r: T2DInt64): T2DDouble; 
Operator + (l: T2DDouble; r: T2DUInt32): T2DDouble; 
Operator + (l: T2DDouble; r: T2DInt32): T2DDouble; 
Operator + (l: T2DDouble; r: T2DUInt8): T2DDouble; 
Operator + (l: T2DDouble; r: T2DInt8): T2DDouble; 
Operator + (l: T2DDouble; r: Extended): T2DExtended; 
Operator + (l: T2DDouble; r: Double): T2DDouble; 
Operator + (l: T2DDouble; r: Single): T2DDouble; 
Operator + (l: T2DDouble; r: UInt64): T2DDouble; 
Operator + (l: T2DDouble; r: Int64): T2DDouble; 
Operator + (l: T2DDouble; r: UInt32): T2DDouble; 
Operator + (l: T2DDouble; r: Int32): T2DDouble; 
Operator + (l: T2DDouble; r: UInt8): T2DDouble; 
Operator + (l: T2DDouble; r: Int8): T2DDouble; 
Operator + (l: T2DSingle; r: T2DExtended): T2DExtended; 
Operator + (l: T2DSingle; r: T2DDouble): T2DDouble; 
Operator + (l: T2DSingle; r: T2DUInt64): T2DSingle; 
Operator + (l: T2DSingle; r: T2DInt64): T2DSingle; 
Operator + (l: T2DSingle; r: T2DUInt32): T2DSingle; 
Operator + (l: T2DSingle; r: T2DInt32): T2DSingle; 
Operator + (l: T2DSingle; r: T2DUInt8): T2DSingle; 
Operator + (l: T2DSingle; r: T2DInt8): T2DSingle; 
Operator + (l: T2DSingle; r: Extended): T2DExtended; 
Operator + (l: T2DSingle; r: Double): T2DDouble; 
Operator + (l: T2DSingle; r: Single): T2DSingle; 
Operator + (l: T2DSingle; r: UInt64): T2DSingle; 
Operator + (l: T2DSingle; r: Int64): T2DSingle; 
Operator + (l: T2DSingle; r: UInt32): T2DSingle; 
Operator + (l: T2DSingle; r: Int32): T2DSingle; 
Operator + (l: T2DSingle; r: UInt8): T2DSingle; 
Operator + (l: T2DSingle; r: Int8): T2DSingle; 
Operator + (l: T2DUInt64; r: T2DExtended): T2DExtended; 
Operator + (l: T2DUInt64; r: T2DDouble): T2DDouble; 
Operator + (l: T2DUInt64; r: T2DSingle): T2DSingle; 
Operator + (l: T2DUInt64; r: T2DInt64): T2DUInt64; 
Operator + (l: T2DUInt64; r: T2DUInt32): T2DUInt64; 
Operator + (l: T2DUInt64; r: T2DInt32): T2DUInt64; 
Operator + (l: T2DUInt64; r: T2DUInt8): T2DUInt64; 
Operator + (l: T2DUInt64; r: T2DInt8): T2DUInt64; 
Operator + (l: T2DUInt64; r: Extended): T2DExtended; 
Operator + (l: T2DUInt64; r: Double): T2DDouble; 
Operator + (l: T2DUInt64; r: Single): T2DSingle; 
Operator + (l: T2DUInt64; r: UInt64): T2DUInt64; 
Operator + (l: T2DUInt64; r: Int64): T2DUInt64; 
Operator + (l: T2DUInt64; r: UInt32): T2DUInt64; 
Operator + (l: T2DUInt64; r: Int32): T2DUInt64; 
Operator + (l: T2DUInt64; r: UInt8): T2DUInt64; 
Operator + (l: T2DUInt64; r: Int8): T2DUInt64; 
Operator + (l: T2DInt64; r: T2DExtended): T2DExtended; 
Operator + (l: T2DInt64; r: T2DDouble): T2DDouble; 
Operator + (l: T2DInt64; r: T2DSingle): T2DSingle; 
Operator + (l: T2DInt64; r: T2DUInt64): T2DUInt64; 
Operator + (l: T2DInt64; r: T2DUInt32): T2DInt64; 
Operator + (l: T2DInt64; r: T2DInt32): T2DInt64; 
Operator + (l: T2DInt64; r: T2DUInt8): T2DInt64; 
Operator + (l: T2DInt64; r: T2DInt8): T2DInt64; 
Operator + (l: T2DInt64; r: Extended): T2DExtended; 
Operator + (l: T2DInt64; r: Double): T2DDouble; 
Operator + (l: T2DInt64; r: Single): T2DSingle; 
Operator + (l: T2DInt64; r: UInt64): T2DUInt64; 
Operator + (l: T2DInt64; r: Int64): T2DInt64; 
Operator + (l: T2DInt64; r: UInt32): T2DInt64; 
Operator + (l: T2DInt64; r: Int32): T2DInt64; 
Operator + (l: T2DInt64; r: UInt8): T2DInt64; 
Operator + (l: T2DInt64; r: Int8): T2DInt64; 
Operator + (l: T2DUInt32; r: T2DExtended): T2DExtended; 
Operator + (l: T2DUInt32; r: T2DDouble): T2DDouble; 
Operator + (l: T2DUInt32; r: T2DSingle): T2DSingle; 
Operator + (l: T2DUInt32; r: T2DUInt64): T2DUInt64; 
Operator + (l: T2DUInt32; r: T2DInt64): T2DInt64; 
Operator + (l: T2DUInt32; r: T2DInt32): T2DUInt32; 
Operator + (l: T2DUInt32; r: T2DUInt8): T2DUInt32; 
Operator + (l: T2DUInt32; r: T2DInt8): T2DUInt32; 
Operator + (l: T2DUInt32; r: Extended): T2DExtended; 
Operator + (l: T2DUInt32; r: Double): T2DDouble; 
Operator + (l: T2DUInt32; r: Single): T2DSingle; 
Operator + (l: T2DUInt32; r: UInt64): T2DUInt64; 
Operator + (l: T2DUInt32; r: Int64): T2DInt64; 
Operator + (l: T2DUInt32; r: UInt32): T2DUInt32; 
Operator + (l: T2DUInt32; r: Int32): T2DUInt32; 
Operator + (l: T2DUInt32; r: UInt8): T2DUInt32; 
Operator + (l: T2DUInt32; r: Int8): T2DUInt32; 
Operator + (l: T2DInt32; r: T2DExtended): T2DExtended; 
Operator + (l: T2DInt32; r: T2DDouble): T2DDouble; 
Operator + (l: T2DInt32; r: T2DSingle): T2DSingle; 
Operator + (l: T2DInt32; r: T2DUInt64): T2DUInt64; 
Operator + (l: T2DInt32; r: T2DInt64): T2DInt64; 
Operator + (l: T2DInt32; r: T2DUInt32): T2DUInt32; 
Operator + (l: T2DInt32; r: T2DUInt8): T2DInt32; 
Operator + (l: T2DInt32; r: T2DInt8): T2DInt32; 
Operator + (l: T2DInt32; r: Extended): T2DExtended; 
Operator + (l: T2DInt32; r: Double): T2DDouble; 
Operator + (l: T2DInt32; r: Single): T2DSingle; 
Operator + (l: T2DInt32; r: UInt64): T2DUInt64; 
Operator + (l: T2DInt32; r: Int64): T2DInt64; 
Operator + (l: T2DInt32; r: UInt32): T2DUInt32; 
Operator + (l: T2DInt32; r: Int32): T2DInt32; 
Operator + (l: T2DInt32; r: UInt8): T2DInt32; 
Operator + (l: T2DInt32; r: Int8): T2DInt32; 
Operator + (l: T2DUInt8; r: T2DExtended): T2DExtended; 
Operator + (l: T2DUInt8; r: T2DDouble): T2DDouble; 
Operator + (l: T2DUInt8; r: T2DSingle): T2DSingle; 
Operator + (l: T2DUInt8; r: T2DUInt64): T2DUInt64; 
Operator + (l: T2DUInt8; r: T2DInt64): T2DInt64; 
Operator + (l: T2DUInt8; r: T2DUInt32): T2DUInt32; 
Operator + (l: T2DUInt8; r: T2DInt32): T2DInt32; 
Operator + (l: T2DUInt8; r: T2DInt8): T2DUInt8; 
Operator + (l: T2DUInt8; r: Extended): T2DExtended; 
Operator + (l: T2DUInt8; r: Double): T2DDouble; 
Operator + (l: T2DUInt8; r: Single): T2DSingle; 
Operator + (l: T2DUInt8; r: UInt64): T2DUInt64; 
Operator + (l: T2DUInt8; r: Int64): T2DInt64; 
Operator + (l: T2DUInt8; r: UInt32): T2DUInt32; 
Operator + (l: T2DUInt8; r: Int32): T2DInt32; 
Operator + (l: T2DUInt8; r: UInt8): T2DUInt8; 
Operator + (l: T2DUInt8; r: Int8): T2DUInt8; 
Operator + (l: T2DInt8; r: T2DExtended): T2DExtended; 
Operator + (l: T2DInt8; r: T2DDouble): T2DDouble; 
Operator + (l: T2DInt8; r: T2DSingle): T2DSingle; 
Operator + (l: T2DInt8; r: T2DUInt64): T2DUInt64; 
Operator + (l: T2DInt8; r: T2DInt64): T2DInt64; 
Operator + (l: T2DInt8; r: T2DUInt32): T2DUInt32; 
Operator + (l: T2DInt8; r: T2DInt32): T2DInt32; 
Operator + (l: T2DInt8; r: T2DUInt8): T2DUInt8; 
Operator + (l: T2DInt8; r: Extended): T2DExtended; 
Operator + (l: T2DInt8; r: Double): T2DDouble; 
Operator + (l: T2DInt8; r: Single): T2DSingle; 
Operator + (l: T2DInt8; r: UInt64): T2DUInt64; 
Operator + (l: T2DInt8; r: Int64): T2DInt64; 
Operator + (l: T2DInt8; r: UInt32): T2DUInt32; 
Operator + (l: T2DInt8; r: Int32): T2DInt32; 
Operator + (l: T2DInt8; r: UInt8): T2DUInt8; 
Operator + (l: T2DInt8; r: Int8): T2DInt8; 
Operator + (l: Extended; r: T2DExtended): T2DExtended; 
Operator + (l: Extended; r: T2DDouble): T2DExtended; 
Operator + (l: Extended; r: T2DSingle): T2DExtended; 
Operator + (l: Extended; r: T2DUInt64): T2DExtended; 
Operator + (l: Extended; r: T2DInt64): T2DExtended; 
Operator + (l: Extended; r: T2DUInt32): T2DExtended; 
Operator + (l: Extended; r: T2DInt32): T2DExtended; 
Operator + (l: Extended; r: T2DUInt8): T2DExtended; 
Operator + (l: Extended; r: T2DInt8): T2DExtended; 
Operator + (l: Double; r: T2DExtended): T2DExtended; 
Operator + (l: Double; r: T2DDouble): T2DDouble; 
Operator + (l: Double; r: T2DSingle): T2DDouble; 
Operator + (l: Double; r: T2DUInt64): T2DDouble; 
Operator + (l: Double; r: T2DInt64): T2DDouble; 
Operator + (l: Double; r: T2DUInt32): T2DDouble; 
Operator + (l: Double; r: T2DInt32): T2DDouble; 
Operator + (l: Double; r: T2DUInt8): T2DDouble; 
Operator + (l: Double; r: T2DInt8): T2DDouble; 
Operator + (l: Single; r: T2DExtended): T2DExtended; 
Operator + (l: Single; r: T2DDouble): T2DDouble; 
Operator + (l: Single; r: T2DSingle): T2DSingle; 
Operator + (l: Single; r: T2DUInt64): T2DSingle; 
Operator + (l: Single; r: T2DInt64): T2DSingle; 
Operator + (l: Single; r: T2DUInt32): T2DSingle; 
Operator + (l: Single; r: T2DInt32): T2DSingle; 
Operator + (l: Single; r: T2DUInt8): T2DSingle; 
Operator + (l: Single; r: T2DInt8): T2DSingle; 
Operator + (l: UInt64; r: T2DExtended): T2DExtended; 
Operator + (l: UInt64; r: T2DDouble): T2DDouble; 
Operator + (l: UInt64; r: T2DSingle): T2DSingle; 
Operator + (l: UInt64; r: T2DUInt64): T2DUInt64; 
Operator + (l: UInt64; r: T2DInt64): T2DUInt64; 
Operator + (l: UInt64; r: T2DUInt32): T2DUInt64; 
Operator + (l: UInt64; r: T2DInt32): T2DUInt64; 
Operator + (l: UInt64; r: T2DUInt8): T2DUInt64; 
Operator + (l: UInt64; r: T2DInt8): T2DUInt64; 
Operator + (l: Int64; r: T2DExtended): T2DExtended; 
Operator + (l: Int64; r: T2DDouble): T2DDouble; 
Operator + (l: Int64; r: T2DSingle): T2DSingle; 
Operator + (l: Int64; r: T2DUInt64): T2DUInt64; 
Operator + (l: Int64; r: T2DInt64): T2DInt64; 
Operator + (l: Int64; r: T2DUInt32): T2DInt64; 
Operator + (l: Int64; r: T2DInt32): T2DInt64; 
Operator + (l: Int64; r: T2DUInt8): T2DInt64; 
Operator + (l: Int64; r: T2DInt8): T2DInt64; 
Operator + (l: UInt32; r: T2DExtended): T2DExtended; 
Operator + (l: UInt32; r: T2DDouble): T2DDouble; 
Operator + (l: UInt32; r: T2DSingle): T2DSingle; 
Operator + (l: UInt32; r: T2DUInt64): T2DUInt64; 
Operator + (l: UInt32; r: T2DInt64): T2DInt64; 
Operator + (l: UInt32; r: T2DUInt32): T2DUInt32; 
Operator + (l: UInt32; r: T2DInt32): T2DUInt32; 
Operator + (l: UInt32; r: T2DUInt8): T2DUInt32; 
Operator + (l: UInt32; r: T2DInt8): T2DUInt32; 
Operator + (l: Int32; r: T2DExtended): T2DExtended; 
Operator + (l: Int32; r: T2DDouble): T2DDouble; 
Operator + (l: Int32; r: T2DSingle): T2DSingle; 
Operator + (l: Int32; r: T2DUInt64): T2DUInt64; 
Operator + (l: Int32; r: T2DInt64): T2DInt64; 
Operator + (l: Int32; r: T2DUInt32): T2DUInt32; 
Operator + (l: Int32; r: T2DInt32): T2DInt32; 
Operator + (l: Int32; r: T2DUInt8): T2DInt32; 
Operator + (l: Int32; r: T2DInt8): T2DInt32; 
Operator + (l: UInt8; r: T2DExtended): T2DExtended; 
Operator + (l: UInt8; r: T2DDouble): T2DDouble; 
Operator + (l: UInt8; r: T2DSingle): T2DSingle; 
Operator + (l: UInt8; r: T2DUInt64): T2DUInt64; 
Operator + (l: UInt8; r: T2DInt64): T2DInt64; 
Operator + (l: UInt8; r: T2DUInt32): T2DUInt32; 
Operator + (l: UInt8; r: T2DInt32): T2DInt32; 
Operator + (l: UInt8; r: T2DUInt8): T2DUInt8; 
Operator + (l: UInt8; r: T2DInt8): T2DUInt8; 
Operator + (l: Int8; r: T2DExtended): T2DExtended; 
Operator + (l: Int8; r: T2DDouble): T2DDouble; 
Operator + (l: Int8; r: T2DSingle): T2DSingle; 
Operator + (l: Int8; r: T2DUInt64): T2DUInt64; 
Operator + (l: Int8; r: T2DInt64): T2DInt64; 
Operator + (l: Int8; r: T2DUInt32): T2DUInt32; 
Operator + (l: Int8; r: T2DInt32): T2DInt32; 
Operator + (l: Int8; r: T2DUInt8): T2DUInt8; 
Operator + (l: Int8; r: T2DInt8): T2DInt8; 


Operator * (l: T2DExtended; r: T2DExtended): T2DExtended; 
Operator * (l: T2DDouble; r: T2DDouble): T2DDouble; 
Operator * (l: T2DSingle; r: T2DSingle): T2DSingle; 
Operator * (l: T2DUInt64; r: T2DUInt64): T2DUInt64; 
Operator * (l: T2DInt64; r: T2DInt64): T2DInt64; 
Operator * (l: T2DUInt32; r: T2DUInt32): T2DUInt32; 
Operator * (l: T2DInt32; r: T2DInt32): T2DInt32; 
Operator * (l: T2DUInt8; r: T2DUInt8): T2DUInt8; 
Operator * (l: T2DInt8; r: T2DInt8): T2DInt8; 
Operator * (l: T2DExtended; r: T2DDouble): T2DExtended; 
Operator * (l: T2DExtended; r: T2DSingle): T2DExtended; 
Operator * (l: T2DExtended; r: T2DUInt64): T2DExtended; 
Operator * (l: T2DExtended; r: T2DInt64): T2DExtended; 
Operator * (l: T2DExtended; r: T2DUInt32): T2DExtended; 
Operator * (l: T2DExtended; r: T2DInt32): T2DExtended; 
Operator * (l: T2DExtended; r: T2DUInt8): T2DExtended; 
Operator * (l: T2DExtended; r: T2DInt8): T2DExtended; 
Operator * (l: T2DExtended; r: Extended): T2DExtended; 
Operator * (l: T2DExtended; r: Double): T2DExtended; 
Operator * (l: T2DExtended; r: Single): T2DExtended; 
Operator * (l: T2DExtended; r: UInt64): T2DExtended; 
Operator * (l: T2DExtended; r: Int64): T2DExtended; 
Operator * (l: T2DExtended; r: UInt32): T2DExtended; 
Operator * (l: T2DExtended; r: Int32): T2DExtended; 
Operator * (l: T2DExtended; r: UInt8): T2DExtended; 
Operator * (l: T2DExtended; r: Int8): T2DExtended; 
Operator * (l: T2DDouble; r: T2DExtended): T2DExtended; 
Operator * (l: T2DDouble; r: T2DSingle): T2DDouble; 
Operator * (l: T2DDouble; r: T2DUInt64): T2DDouble; 
Operator * (l: T2DDouble; r: T2DInt64): T2DDouble; 
Operator * (l: T2DDouble; r: T2DUInt32): T2DDouble; 
Operator * (l: T2DDouble; r: T2DInt32): T2DDouble; 
Operator * (l: T2DDouble; r: T2DUInt8): T2DDouble; 
Operator * (l: T2DDouble; r: T2DInt8): T2DDouble; 
Operator * (l: T2DDouble; r: Extended): T2DExtended; 
Operator * (l: T2DDouble; r: Double): T2DDouble; 
Operator * (l: T2DDouble; r: Single): T2DDouble; 
Operator * (l: T2DDouble; r: UInt64): T2DDouble; 
Operator * (l: T2DDouble; r: Int64): T2DDouble; 
Operator * (l: T2DDouble; r: UInt32): T2DDouble; 
Operator * (l: T2DDouble; r: Int32): T2DDouble; 
Operator * (l: T2DDouble; r: UInt8): T2DDouble; 
Operator * (l: T2DDouble; r: Int8): T2DDouble; 
Operator * (l: T2DSingle; r: T2DExtended): T2DExtended; 
Operator * (l: T2DSingle; r: T2DDouble): T2DDouble; 
Operator * (l: T2DSingle; r: T2DUInt64): T2DSingle; 
Operator * (l: T2DSingle; r: T2DInt64): T2DSingle; 
Operator * (l: T2DSingle; r: T2DUInt32): T2DSingle; 
Operator * (l: T2DSingle; r: T2DInt32): T2DSingle; 
Operator * (l: T2DSingle; r: T2DUInt8): T2DSingle; 
Operator * (l: T2DSingle; r: T2DInt8): T2DSingle; 
Operator * (l: T2DSingle; r: Extended): T2DExtended; 
Operator * (l: T2DSingle; r: Double): T2DDouble; 
Operator * (l: T2DSingle; r: Single): T2DSingle; 
Operator * (l: T2DSingle; r: UInt64): T2DSingle; 
Operator * (l: T2DSingle; r: Int64): T2DSingle; 
Operator * (l: T2DSingle; r: UInt32): T2DSingle; 
Operator * (l: T2DSingle; r: Int32): T2DSingle; 
Operator * (l: T2DSingle; r: UInt8): T2DSingle; 
Operator * (l: T2DSingle; r: Int8): T2DSingle; 
Operator * (l: T2DUInt64; r: T2DExtended): T2DExtended; 
Operator * (l: T2DUInt64; r: T2DDouble): T2DDouble; 
Operator * (l: T2DUInt64; r: T2DSingle): T2DSingle; 
Operator * (l: T2DUInt64; r: T2DInt64): T2DUInt64; 
Operator * (l: T2DUInt64; r: T2DUInt32): T2DUInt64; 
Operator * (l: T2DUInt64; r: T2DInt32): T2DUInt64; 
Operator * (l: T2DUInt64; r: T2DUInt8): T2DUInt64; 
Operator * (l: T2DUInt64; r: T2DInt8): T2DUInt64; 
Operator * (l: T2DUInt64; r: Extended): T2DExtended; 
Operator * (l: T2DUInt64; r: Double): T2DDouble; 
Operator * (l: T2DUInt64; r: Single): T2DSingle; 
Operator * (l: T2DUInt64; r: UInt64): T2DUInt64; 
Operator * (l: T2DUInt64; r: Int64): T2DUInt64; 
Operator * (l: T2DUInt64; r: UInt32): T2DUInt64; 
Operator * (l: T2DUInt64; r: Int32): T2DUInt64; 
Operator * (l: T2DUInt64; r: UInt8): T2DUInt64; 
Operator * (l: T2DUInt64; r: Int8): T2DUInt64; 
Operator * (l: T2DInt64; r: T2DExtended): T2DExtended; 
Operator * (l: T2DInt64; r: T2DDouble): T2DDouble; 
Operator * (l: T2DInt64; r: T2DSingle): T2DSingle; 
Operator * (l: T2DInt64; r: T2DUInt64): T2DUInt64; 
Operator * (l: T2DInt64; r: T2DUInt32): T2DInt64; 
Operator * (l: T2DInt64; r: T2DInt32): T2DInt64; 
Operator * (l: T2DInt64; r: T2DUInt8): T2DInt64; 
Operator * (l: T2DInt64; r: T2DInt8): T2DInt64; 
Operator * (l: T2DInt64; r: Extended): T2DExtended; 
Operator * (l: T2DInt64; r: Double): T2DDouble; 
Operator * (l: T2DInt64; r: Single): T2DSingle; 
Operator * (l: T2DInt64; r: UInt64): T2DUInt64; 
Operator * (l: T2DInt64; r: Int64): T2DInt64; 
Operator * (l: T2DInt64; r: UInt32): T2DInt64; 
Operator * (l: T2DInt64; r: Int32): T2DInt64; 
Operator * (l: T2DInt64; r: UInt8): T2DInt64; 
Operator * (l: T2DInt64; r: Int8): T2DInt64; 
Operator * (l: T2DUInt32; r: T2DExtended): T2DExtended; 
Operator * (l: T2DUInt32; r: T2DDouble): T2DDouble; 
Operator * (l: T2DUInt32; r: T2DSingle): T2DSingle; 
Operator * (l: T2DUInt32; r: T2DUInt64): T2DUInt64; 
Operator * (l: T2DUInt32; r: T2DInt64): T2DInt64; 
Operator * (l: T2DUInt32; r: T2DInt32): T2DUInt32; 
Operator * (l: T2DUInt32; r: T2DUInt8): T2DUInt32; 
Operator * (l: T2DUInt32; r: T2DInt8): T2DUInt32; 
Operator * (l: T2DUInt32; r: Extended): T2DExtended; 
Operator * (l: T2DUInt32; r: Double): T2DDouble; 
Operator * (l: T2DUInt32; r: Single): T2DSingle; 
Operator * (l: T2DUInt32; r: UInt64): T2DUInt64; 
Operator * (l: T2DUInt32; r: Int64): T2DInt64; 
Operator * (l: T2DUInt32; r: UInt32): T2DUInt32; 
Operator * (l: T2DUInt32; r: Int32): T2DUInt32; 
Operator * (l: T2DUInt32; r: UInt8): T2DUInt32; 
Operator * (l: T2DUInt32; r: Int8): T2DUInt32; 
Operator * (l: T2DInt32; r: T2DExtended): T2DExtended; 
Operator * (l: T2DInt32; r: T2DDouble): T2DDouble; 
Operator * (l: T2DInt32; r: T2DSingle): T2DSingle; 
Operator * (l: T2DInt32; r: T2DUInt64): T2DUInt64; 
Operator * (l: T2DInt32; r: T2DInt64): T2DInt64; 
Operator * (l: T2DInt32; r: T2DUInt32): T2DUInt32; 
Operator * (l: T2DInt32; r: T2DUInt8): T2DInt32; 
Operator * (l: T2DInt32; r: T2DInt8): T2DInt32; 
Operator * (l: T2DInt32; r: Extended): T2DExtended; 
Operator * (l: T2DInt32; r: Double): T2DDouble; 
Operator * (l: T2DInt32; r: Single): T2DSingle; 
Operator * (l: T2DInt32; r: UInt64): T2DUInt64; 
Operator * (l: T2DInt32; r: Int64): T2DInt64; 
Operator * (l: T2DInt32; r: UInt32): T2DUInt32; 
Operator * (l: T2DInt32; r: Int32): T2DInt32; 
Operator * (l: T2DInt32; r: UInt8): T2DInt32; 
Operator * (l: T2DInt32; r: Int8): T2DInt32; 
Operator * (l: T2DUInt8; r: T2DExtended): T2DExtended; 
Operator * (l: T2DUInt8; r: T2DDouble): T2DDouble; 
Operator * (l: T2DUInt8; r: T2DSingle): T2DSingle; 
Operator * (l: T2DUInt8; r: T2DUInt64): T2DUInt64; 
Operator * (l: T2DUInt8; r: T2DInt64): T2DInt64; 
Operator * (l: T2DUInt8; r: T2DUInt32): T2DUInt32; 
Operator * (l: T2DUInt8; r: T2DInt32): T2DInt32; 
Operator * (l: T2DUInt8; r: T2DInt8): T2DUInt8; 
Operator * (l: T2DUInt8; r: Extended): T2DExtended; 
Operator * (l: T2DUInt8; r: Double): T2DDouble; 
Operator * (l: T2DUInt8; r: Single): T2DSingle; 
Operator * (l: T2DUInt8; r: UInt64): T2DUInt64; 
Operator * (l: T2DUInt8; r: Int64): T2DInt64; 
Operator * (l: T2DUInt8; r: UInt32): T2DUInt32; 
Operator * (l: T2DUInt8; r: Int32): T2DInt32; 
Operator * (l: T2DUInt8; r: UInt8): T2DUInt8; 
Operator * (l: T2DUInt8; r: Int8): T2DUInt8; 
Operator * (l: T2DInt8; r: T2DExtended): T2DExtended; 
Operator * (l: T2DInt8; r: T2DDouble): T2DDouble; 
Operator * (l: T2DInt8; r: T2DSingle): T2DSingle; 
Operator * (l: T2DInt8; r: T2DUInt64): T2DUInt64; 
Operator * (l: T2DInt8; r: T2DInt64): T2DInt64; 
Operator * (l: T2DInt8; r: T2DUInt32): T2DUInt32; 
Operator * (l: T2DInt8; r: T2DInt32): T2DInt32; 
Operator * (l: T2DInt8; r: T2DUInt8): T2DUInt8; 
Operator * (l: T2DInt8; r: Extended): T2DExtended; 
Operator * (l: T2DInt8; r: Double): T2DDouble; 
Operator * (l: T2DInt8; r: Single): T2DSingle; 
Operator * (l: T2DInt8; r: UInt64): T2DUInt64; 
Operator * (l: T2DInt8; r: Int64): T2DInt64; 
Operator * (l: T2DInt8; r: UInt32): T2DUInt32; 
Operator * (l: T2DInt8; r: Int32): T2DInt32; 
Operator * (l: T2DInt8; r: UInt8): T2DUInt8; 
Operator * (l: T2DInt8; r: Int8): T2DInt8; 
Operator * (l: Extended; r: T2DExtended): T2DExtended; 
Operator * (l: Extended; r: T2DDouble): T2DExtended; 
Operator * (l: Extended; r: T2DSingle): T2DExtended; 
Operator * (l: Extended; r: T2DUInt64): T2DExtended; 
Operator * (l: Extended; r: T2DInt64): T2DExtended; 
Operator * (l: Extended; r: T2DUInt32): T2DExtended; 
Operator * (l: Extended; r: T2DInt32): T2DExtended; 
Operator * (l: Extended; r: T2DUInt8): T2DExtended; 
Operator * (l: Extended; r: T2DInt8): T2DExtended; 
Operator * (l: Double; r: T2DExtended): T2DExtended; 
Operator * (l: Double; r: T2DDouble): T2DDouble; 
Operator * (l: Double; r: T2DSingle): T2DDouble; 
Operator * (l: Double; r: T2DUInt64): T2DDouble; 
Operator * (l: Double; r: T2DInt64): T2DDouble; 
Operator * (l: Double; r: T2DUInt32): T2DDouble; 
Operator * (l: Double; r: T2DInt32): T2DDouble; 
Operator * (l: Double; r: T2DUInt8): T2DDouble; 
Operator * (l: Double; r: T2DInt8): T2DDouble; 
Operator * (l: Single; r: T2DExtended): T2DExtended; 
Operator * (l: Single; r: T2DDouble): T2DDouble; 
Operator * (l: Single; r: T2DSingle): T2DSingle; 
Operator * (l: Single; r: T2DUInt64): T2DSingle; 
Operator * (l: Single; r: T2DInt64): T2DSingle; 
Operator * (l: Single; r: T2DUInt32): T2DSingle; 
Operator * (l: Single; r: T2DInt32): T2DSingle; 
Operator * (l: Single; r: T2DUInt8): T2DSingle; 
Operator * (l: Single; r: T2DInt8): T2DSingle; 
Operator * (l: UInt64; r: T2DExtended): T2DExtended; 
Operator * (l: UInt64; r: T2DDouble): T2DDouble; 
Operator * (l: UInt64; r: T2DSingle): T2DSingle; 
Operator * (l: UInt64; r: T2DUInt64): T2DUInt64; 
Operator * (l: UInt64; r: T2DInt64): T2DUInt64; 
Operator * (l: UInt64; r: T2DUInt32): T2DUInt64; 
Operator * (l: UInt64; r: T2DInt32): T2DUInt64; 
Operator * (l: UInt64; r: T2DUInt8): T2DUInt64; 
Operator * (l: UInt64; r: T2DInt8): T2DUInt64; 
Operator * (l: Int64; r: T2DExtended): T2DExtended; 
Operator * (l: Int64; r: T2DDouble): T2DDouble; 
Operator * (l: Int64; r: T2DSingle): T2DSingle; 
Operator * (l: Int64; r: T2DUInt64): T2DUInt64; 
Operator * (l: Int64; r: T2DInt64): T2DInt64; 
Operator * (l: Int64; r: T2DUInt32): T2DInt64; 
Operator * (l: Int64; r: T2DInt32): T2DInt64; 
Operator * (l: Int64; r: T2DUInt8): T2DInt64; 
Operator * (l: Int64; r: T2DInt8): T2DInt64; 
Operator * (l: UInt32; r: T2DExtended): T2DExtended; 
Operator * (l: UInt32; r: T2DDouble): T2DDouble; 
Operator * (l: UInt32; r: T2DSingle): T2DSingle; 
Operator * (l: UInt32; r: T2DUInt64): T2DUInt64; 
Operator * (l: UInt32; r: T2DInt64): T2DInt64; 
Operator * (l: UInt32; r: T2DUInt32): T2DUInt32; 
Operator * (l: UInt32; r: T2DInt32): T2DUInt32; 
Operator * (l: UInt32; r: T2DUInt8): T2DUInt32; 
Operator * (l: UInt32; r: T2DInt8): T2DUInt32; 
Operator * (l: Int32; r: T2DExtended): T2DExtended; 
Operator * (l: Int32; r: T2DDouble): T2DDouble; 
Operator * (l: Int32; r: T2DSingle): T2DSingle; 
Operator * (l: Int32; r: T2DUInt64): T2DUInt64; 
Operator * (l: Int32; r: T2DInt64): T2DInt64; 
Operator * (l: Int32; r: T2DUInt32): T2DUInt32; 
Operator * (l: Int32; r: T2DInt32): T2DInt32; 
Operator * (l: Int32; r: T2DUInt8): T2DInt32; 
Operator * (l: Int32; r: T2DInt8): T2DInt32; 
Operator * (l: UInt8; r: T2DExtended): T2DExtended; 
Operator * (l: UInt8; r: T2DDouble): T2DDouble; 
Operator * (l: UInt8; r: T2DSingle): T2DSingle; 
Operator * (l: UInt8; r: T2DUInt64): T2DUInt64; 
Operator * (l: UInt8; r: T2DInt64): T2DInt64; 
Operator * (l: UInt8; r: T2DUInt32): T2DUInt32; 
Operator * (l: UInt8; r: T2DInt32): T2DInt32; 
Operator * (l: UInt8; r: T2DUInt8): T2DUInt8; 
Operator * (l: UInt8; r: T2DInt8): T2DUInt8; 
Operator * (l: Int8; r: T2DExtended): T2DExtended; 
Operator * (l: Int8; r: T2DDouble): T2DDouble; 
Operator * (l: Int8; r: T2DSingle): T2DSingle; 
Operator * (l: Int8; r: T2DUInt64): T2DUInt64; 
Operator * (l: Int8; r: T2DInt64): T2DInt64; 
Operator * (l: Int8; r: T2DUInt32): T2DUInt32; 
Operator * (l: Int8; r: T2DInt32): T2DInt32; 
Operator * (l: Int8; r: T2DUInt8): T2DUInt8; 
Operator * (l: Int8; r: T2DInt8): T2DInt8; 


Operator - (l: T2DExtended; r: T2DExtended): T2DExtended; 
Operator - (l: T2DDouble; r: T2DDouble): T2DDouble; 
Operator - (l: T2DSingle; r: T2DSingle): T2DSingle; 
Operator - (l: T2DUInt64; r: T2DUInt64): T2DUInt64; 
Operator - (l: T2DInt64; r: T2DInt64): T2DInt64; 
Operator - (l: T2DUInt32; r: T2DUInt32): T2DUInt32; 
Operator - (l: T2DInt32; r: T2DInt32): T2DInt32; 
Operator - (l: T2DUInt8; r: T2DUInt8): T2DUInt8; 
Operator - (l: T2DInt8; r: T2DInt8): T2DInt8; 
Operator - (l: T2DExtended; r: T2DDouble): T2DExtended; 
Operator - (l: T2DExtended; r: T2DSingle): T2DExtended; 
Operator - (l: T2DExtended; r: T2DUInt64): T2DExtended; 
Operator - (l: T2DExtended; r: T2DInt64): T2DExtended; 
Operator - (l: T2DExtended; r: T2DUInt32): T2DExtended; 
Operator - (l: T2DExtended; r: T2DInt32): T2DExtended; 
Operator - (l: T2DExtended; r: T2DUInt8): T2DExtended; 
Operator - (l: T2DExtended; r: T2DInt8): T2DExtended; 
Operator - (l: T2DExtended; r: Extended): T2DExtended; 
Operator - (l: T2DExtended; r: Double): T2DExtended; 
Operator - (l: T2DExtended; r: Single): T2DExtended; 
Operator - (l: T2DExtended; r: UInt64): T2DExtended; 
Operator - (l: T2DExtended; r: Int64): T2DExtended; 
Operator - (l: T2DExtended; r: UInt32): T2DExtended; 
Operator - (l: T2DExtended; r: Int32): T2DExtended; 
Operator - (l: T2DExtended; r: UInt8): T2DExtended; 
Operator - (l: T2DExtended; r: Int8): T2DExtended; 
Operator - (l: T2DDouble; r: T2DExtended): T2DExtended; 
Operator - (l: T2DDouble; r: T2DSingle): T2DDouble; 
Operator - (l: T2DDouble; r: T2DUInt64): T2DDouble; 
Operator - (l: T2DDouble; r: T2DInt64): T2DDouble; 
Operator - (l: T2DDouble; r: T2DUInt32): T2DDouble; 
Operator - (l: T2DDouble; r: T2DInt32): T2DDouble; 
Operator - (l: T2DDouble; r: T2DUInt8): T2DDouble; 
Operator - (l: T2DDouble; r: T2DInt8): T2DDouble; 
Operator - (l: T2DDouble; r: Extended): T2DExtended; 
Operator - (l: T2DDouble; r: Double): T2DDouble; 
Operator - (l: T2DDouble; r: Single): T2DDouble; 
Operator - (l: T2DDouble; r: UInt64): T2DDouble; 
Operator - (l: T2DDouble; r: Int64): T2DDouble; 
Operator - (l: T2DDouble; r: UInt32): T2DDouble; 
Operator - (l: T2DDouble; r: Int32): T2DDouble; 
Operator - (l: T2DDouble; r: UInt8): T2DDouble; 
Operator - (l: T2DDouble; r: Int8): T2DDouble; 
Operator - (l: T2DSingle; r: T2DExtended): T2DExtended; 
Operator - (l: T2DSingle; r: T2DDouble): T2DDouble; 
Operator - (l: T2DSingle; r: T2DUInt64): T2DSingle; 
Operator - (l: T2DSingle; r: T2DInt64): T2DSingle; 
Operator - (l: T2DSingle; r: T2DUInt32): T2DSingle; 
Operator - (l: T2DSingle; r: T2DInt32): T2DSingle; 
Operator - (l: T2DSingle; r: T2DUInt8): T2DSingle; 
Operator - (l: T2DSingle; r: T2DInt8): T2DSingle; 
Operator - (l: T2DSingle; r: Extended): T2DExtended; 
Operator - (l: T2DSingle; r: Double): T2DDouble; 
Operator - (l: T2DSingle; r: Single): T2DSingle; 
Operator - (l: T2DSingle; r: UInt64): T2DSingle; 
Operator - (l: T2DSingle; r: Int64): T2DSingle; 
Operator - (l: T2DSingle; r: UInt32): T2DSingle; 
Operator - (l: T2DSingle; r: Int32): T2DSingle; 
Operator - (l: T2DSingle; r: UInt8): T2DSingle; 
Operator - (l: T2DSingle; r: Int8): T2DSingle; 
Operator - (l: T2DUInt64; r: T2DExtended): T2DExtended; 
Operator - (l: T2DUInt64; r: T2DDouble): T2DDouble; 
Operator - (l: T2DUInt64; r: T2DSingle): T2DSingle; 
Operator - (l: T2DUInt64; r: T2DInt64): T2DUInt64; 
Operator - (l: T2DUInt64; r: T2DUInt32): T2DUInt64; 
Operator - (l: T2DUInt64; r: T2DInt32): T2DUInt64; 
Operator - (l: T2DUInt64; r: T2DUInt8): T2DUInt64; 
Operator - (l: T2DUInt64; r: T2DInt8): T2DUInt64; 
Operator - (l: T2DUInt64; r: Extended): T2DExtended; 
Operator - (l: T2DUInt64; r: Double): T2DDouble; 
Operator - (l: T2DUInt64; r: Single): T2DSingle; 
Operator - (l: T2DUInt64; r: UInt64): T2DUInt64; 
Operator - (l: T2DUInt64; r: Int64): T2DUInt64; 
Operator - (l: T2DUInt64; r: UInt32): T2DUInt64; 
Operator - (l: T2DUInt64; r: Int32): T2DUInt64; 
Operator - (l: T2DUInt64; r: UInt8): T2DUInt64; 
Operator - (l: T2DUInt64; r: Int8): T2DUInt64; 
Operator - (l: T2DInt64; r: T2DExtended): T2DExtended; 
Operator - (l: T2DInt64; r: T2DDouble): T2DDouble; 
Operator - (l: T2DInt64; r: T2DSingle): T2DSingle; 
Operator - (l: T2DInt64; r: T2DUInt64): T2DUInt64; 
Operator - (l: T2DInt64; r: T2DUInt32): T2DInt64; 
Operator - (l: T2DInt64; r: T2DInt32): T2DInt64; 
Operator - (l: T2DInt64; r: T2DUInt8): T2DInt64; 
Operator - (l: T2DInt64; r: T2DInt8): T2DInt64; 
Operator - (l: T2DInt64; r: Extended): T2DExtended; 
Operator - (l: T2DInt64; r: Double): T2DDouble; 
Operator - (l: T2DInt64; r: Single): T2DSingle; 
Operator - (l: T2DInt64; r: UInt64): T2DUInt64; 
Operator - (l: T2DInt64; r: Int64): T2DInt64; 
Operator - (l: T2DInt64; r: UInt32): T2DInt64; 
Operator - (l: T2DInt64; r: Int32): T2DInt64; 
Operator - (l: T2DInt64; r: UInt8): T2DInt64; 
Operator - (l: T2DInt64; r: Int8): T2DInt64; 
Operator - (l: T2DUInt32; r: T2DExtended): T2DExtended; 
Operator - (l: T2DUInt32; r: T2DDouble): T2DDouble; 
Operator - (l: T2DUInt32; r: T2DSingle): T2DSingle; 
Operator - (l: T2DUInt32; r: T2DUInt64): T2DUInt64; 
Operator - (l: T2DUInt32; r: T2DInt64): T2DInt64; 
Operator - (l: T2DUInt32; r: T2DInt32): T2DUInt32; 
Operator - (l: T2DUInt32; r: T2DUInt8): T2DUInt32; 
Operator - (l: T2DUInt32; r: T2DInt8): T2DUInt32; 
Operator - (l: T2DUInt32; r: Extended): T2DExtended; 
Operator - (l: T2DUInt32; r: Double): T2DDouble; 
Operator - (l: T2DUInt32; r: Single): T2DSingle; 
Operator - (l: T2DUInt32; r: UInt64): T2DUInt64; 
Operator - (l: T2DUInt32; r: Int64): T2DInt64; 
Operator - (l: T2DUInt32; r: UInt32): T2DUInt32; 
Operator - (l: T2DUInt32; r: Int32): T2DUInt32; 
Operator - (l: T2DUInt32; r: UInt8): T2DUInt32; 
Operator - (l: T2DUInt32; r: Int8): T2DUInt32; 
Operator - (l: T2DInt32; r: T2DExtended): T2DExtended; 
Operator - (l: T2DInt32; r: T2DDouble): T2DDouble; 
Operator - (l: T2DInt32; r: T2DSingle): T2DSingle; 
Operator - (l: T2DInt32; r: T2DUInt64): T2DUInt64; 
Operator - (l: T2DInt32; r: T2DInt64): T2DInt64; 
Operator - (l: T2DInt32; r: T2DUInt32): T2DUInt32; 
Operator - (l: T2DInt32; r: T2DUInt8): T2DInt32; 
Operator - (l: T2DInt32; r: T2DInt8): T2DInt32; 
Operator - (l: T2DInt32; r: Extended): T2DExtended; 
Operator - (l: T2DInt32; r: Double): T2DDouble; 
Operator - (l: T2DInt32; r: Single): T2DSingle; 
Operator - (l: T2DInt32; r: UInt64): T2DUInt64; 
Operator - (l: T2DInt32; r: Int64): T2DInt64; 
Operator - (l: T2DInt32; r: UInt32): T2DUInt32; 
Operator - (l: T2DInt32; r: Int32): T2DInt32; 
Operator - (l: T2DInt32; r: UInt8): T2DInt32; 
Operator - (l: T2DInt32; r: Int8): T2DInt32; 
Operator - (l: T2DUInt8; r: T2DExtended): T2DExtended; 
Operator - (l: T2DUInt8; r: T2DDouble): T2DDouble; 
Operator - (l: T2DUInt8; r: T2DSingle): T2DSingle; 
Operator - (l: T2DUInt8; r: T2DUInt64): T2DUInt64; 
Operator - (l: T2DUInt8; r: T2DInt64): T2DInt64; 
Operator - (l: T2DUInt8; r: T2DUInt32): T2DUInt32; 
Operator - (l: T2DUInt8; r: T2DInt32): T2DInt32; 
Operator - (l: T2DUInt8; r: T2DInt8): T2DUInt8; 
Operator - (l: T2DUInt8; r: Extended): T2DExtended; 
Operator - (l: T2DUInt8; r: Double): T2DDouble; 
Operator - (l: T2DUInt8; r: Single): T2DSingle; 
Operator - (l: T2DUInt8; r: UInt64): T2DUInt64; 
Operator - (l: T2DUInt8; r: Int64): T2DInt64; 
Operator - (l: T2DUInt8; r: UInt32): T2DUInt32; 
Operator - (l: T2DUInt8; r: Int32): T2DInt32; 
Operator - (l: T2DUInt8; r: UInt8): T2DUInt8; 
Operator - (l: T2DUInt8; r: Int8): T2DUInt8; 
Operator - (l: T2DInt8; r: T2DExtended): T2DExtended; 
Operator - (l: T2DInt8; r: T2DDouble): T2DDouble; 
Operator - (l: T2DInt8; r: T2DSingle): T2DSingle; 
Operator - (l: T2DInt8; r: T2DUInt64): T2DUInt64; 
Operator - (l: T2DInt8; r: T2DInt64): T2DInt64; 
Operator - (l: T2DInt8; r: T2DUInt32): T2DUInt32; 
Operator - (l: T2DInt8; r: T2DInt32): T2DInt32; 
Operator - (l: T2DInt8; r: T2DUInt8): T2DUInt8; 
Operator - (l: T2DInt8; r: Extended): T2DExtended; 
Operator - (l: T2DInt8; r: Double): T2DDouble; 
Operator - (l: T2DInt8; r: Single): T2DSingle; 
Operator - (l: T2DInt8; r: UInt64): T2DUInt64; 
Operator - (l: T2DInt8; r: Int64): T2DInt64; 
Operator - (l: T2DInt8; r: UInt32): T2DUInt32; 
Operator - (l: T2DInt8; r: Int32): T2DInt32; 
Operator - (l: T2DInt8; r: UInt8): T2DUInt8; 
Operator - (l: T2DInt8; r: Int8): T2DInt8; 
Operator - (l: Extended; r: T2DExtended): T2DExtended; 
Operator - (l: Extended; r: T2DDouble): T2DExtended; 
Operator - (l: Extended; r: T2DSingle): T2DExtended; 
Operator - (l: Extended; r: T2DUInt64): T2DExtended; 
Operator - (l: Extended; r: T2DInt64): T2DExtended; 
Operator - (l: Extended; r: T2DUInt32): T2DExtended; 
Operator - (l: Extended; r: T2DInt32): T2DExtended; 
Operator - (l: Extended; r: T2DUInt8): T2DExtended; 
Operator - (l: Extended; r: T2DInt8): T2DExtended; 
Operator - (l: Double; r: T2DExtended): T2DExtended; 
Operator - (l: Double; r: T2DDouble): T2DDouble; 
Operator - (l: Double; r: T2DSingle): T2DDouble; 
Operator - (l: Double; r: T2DUInt64): T2DDouble; 
Operator - (l: Double; r: T2DInt64): T2DDouble; 
Operator - (l: Double; r: T2DUInt32): T2DDouble; 
Operator - (l: Double; r: T2DInt32): T2DDouble; 
Operator - (l: Double; r: T2DUInt8): T2DDouble; 
Operator - (l: Double; r: T2DInt8): T2DDouble; 
Operator - (l: Single; r: T2DExtended): T2DExtended; 
Operator - (l: Single; r: T2DDouble): T2DDouble; 
Operator - (l: Single; r: T2DSingle): T2DSingle; 
Operator - (l: Single; r: T2DUInt64): T2DSingle; 
Operator - (l: Single; r: T2DInt64): T2DSingle; 
Operator - (l: Single; r: T2DUInt32): T2DSingle; 
Operator - (l: Single; r: T2DInt32): T2DSingle; 
Operator - (l: Single; r: T2DUInt8): T2DSingle; 
Operator - (l: Single; r: T2DInt8): T2DSingle; 
Operator - (l: UInt64; r: T2DExtended): T2DExtended; 
Operator - (l: UInt64; r: T2DDouble): T2DDouble; 
Operator - (l: UInt64; r: T2DSingle): T2DSingle; 
Operator - (l: UInt64; r: T2DUInt64): T2DUInt64; 
Operator - (l: UInt64; r: T2DInt64): T2DUInt64; 
Operator - (l: UInt64; r: T2DUInt32): T2DUInt64; 
Operator - (l: UInt64; r: T2DInt32): T2DUInt64; 
Operator - (l: UInt64; r: T2DUInt8): T2DUInt64; 
Operator - (l: UInt64; r: T2DInt8): T2DUInt64; 
Operator - (l: Int64; r: T2DExtended): T2DExtended; 
Operator - (l: Int64; r: T2DDouble): T2DDouble; 
Operator - (l: Int64; r: T2DSingle): T2DSingle; 
Operator - (l: Int64; r: T2DUInt64): T2DUInt64; 
Operator - (l: Int64; r: T2DInt64): T2DInt64; 
Operator - (l: Int64; r: T2DUInt32): T2DInt64; 
Operator - (l: Int64; r: T2DInt32): T2DInt64; 
Operator - (l: Int64; r: T2DUInt8): T2DInt64; 
Operator - (l: Int64; r: T2DInt8): T2DInt64; 
Operator - (l: UInt32; r: T2DExtended): T2DExtended; 
Operator - (l: UInt32; r: T2DDouble): T2DDouble; 
Operator - (l: UInt32; r: T2DSingle): T2DSingle; 
Operator - (l: UInt32; r: T2DUInt64): T2DUInt64; 
Operator - (l: UInt32; r: T2DInt64): T2DInt64; 
Operator - (l: UInt32; r: T2DUInt32): T2DUInt32; 
Operator - (l: UInt32; r: T2DInt32): T2DUInt32; 
Operator - (l: UInt32; r: T2DUInt8): T2DUInt32; 
Operator - (l: UInt32; r: T2DInt8): T2DUInt32; 
Operator - (l: Int32; r: T2DExtended): T2DExtended; 
Operator - (l: Int32; r: T2DDouble): T2DDouble; 
Operator - (l: Int32; r: T2DSingle): T2DSingle; 
Operator - (l: Int32; r: T2DUInt64): T2DUInt64; 
Operator - (l: Int32; r: T2DInt64): T2DInt64; 
Operator - (l: Int32; r: T2DUInt32): T2DUInt32; 
Operator - (l: Int32; r: T2DInt32): T2DInt32; 
Operator - (l: Int32; r: T2DUInt8): T2DInt32; 
Operator - (l: Int32; r: T2DInt8): T2DInt32; 
Operator - (l: UInt8; r: T2DExtended): T2DExtended; 
Operator - (l: UInt8; r: T2DDouble): T2DDouble; 
Operator - (l: UInt8; r: T2DSingle): T2DSingle; 
Operator - (l: UInt8; r: T2DUInt64): T2DUInt64; 
Operator - (l: UInt8; r: T2DInt64): T2DInt64; 
Operator - (l: UInt8; r: T2DUInt32): T2DUInt32; 
Operator - (l: UInt8; r: T2DInt32): T2DInt32; 
Operator - (l: UInt8; r: T2DUInt8): T2DUInt8; 
Operator - (l: UInt8; r: T2DInt8): T2DUInt8; 
Operator - (l: Int8; r: T2DExtended): T2DExtended; 
Operator - (l: Int8; r: T2DDouble): T2DDouble; 
Operator - (l: Int8; r: T2DSingle): T2DSingle; 
Operator - (l: Int8; r: T2DUInt64): T2DUInt64; 
Operator - (l: Int8; r: T2DInt64): T2DInt64; 
Operator - (l: Int8; r: T2DUInt32): T2DUInt32; 
Operator - (l: Int8; r: T2DInt32): T2DInt32; 
Operator - (l: Int8; r: T2DUInt8): T2DUInt8; 
Operator - (l: Int8; r: T2DInt8): T2DInt8; 


Operator ** (l: T2DExtended; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DDouble; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DSingle; r: T2DSingle): T2DSingle; 
Operator ** (l: T2DUInt64; r: T2DUInt64): T2DUInt64; 
Operator ** (l: T2DInt64; r: T2DInt64): T2DInt64; 
Operator ** (l: T2DUInt32; r: T2DUInt32): T2DUInt32; 
Operator ** (l: T2DInt32; r: T2DInt32): T2DInt32; 
Operator ** (l: T2DUInt8; r: T2DUInt8): T2DUInt8; 
Operator ** (l: T2DInt8; r: T2DInt8): T2DInt8; 
Operator ** (l: T2DExtended; r: T2DDouble): T2DExtended; 
Operator ** (l: T2DExtended; r: T2DSingle): T2DExtended; 
Operator ** (l: T2DExtended; r: T2DUInt64): T2DExtended; 
Operator ** (l: T2DExtended; r: T2DInt64): T2DExtended; 
Operator ** (l: T2DExtended; r: T2DUInt32): T2DExtended; 
Operator ** (l: T2DExtended; r: T2DInt32): T2DExtended; 
Operator ** (l: T2DExtended; r: T2DUInt8): T2DExtended; 
Operator ** (l: T2DExtended; r: T2DInt8): T2DExtended; 
Operator ** (l: T2DExtended; r: Extended): T2DExtended; 
Operator ** (l: T2DExtended; r: Double): T2DExtended; 
Operator ** (l: T2DExtended; r: Single): T2DExtended; 
Operator ** (l: T2DExtended; r: UInt64): T2DExtended; 
Operator ** (l: T2DExtended; r: Int64): T2DExtended; 
Operator ** (l: T2DExtended; r: UInt32): T2DExtended; 
Operator ** (l: T2DExtended; r: Int32): T2DExtended; 
Operator ** (l: T2DExtended; r: UInt8): T2DExtended; 
Operator ** (l: T2DExtended; r: Int8): T2DExtended; 
Operator ** (l: T2DDouble; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DDouble; r: T2DSingle): T2DDouble; 
Operator ** (l: T2DDouble; r: T2DUInt64): T2DDouble; 
Operator ** (l: T2DDouble; r: T2DInt64): T2DDouble; 
Operator ** (l: T2DDouble; r: T2DUInt32): T2DDouble; 
Operator ** (l: T2DDouble; r: T2DInt32): T2DDouble; 
Operator ** (l: T2DDouble; r: T2DUInt8): T2DDouble; 
Operator ** (l: T2DDouble; r: T2DInt8): T2DDouble; 
Operator ** (l: T2DDouble; r: Extended): T2DExtended; 
Operator ** (l: T2DDouble; r: Double): T2DDouble; 
Operator ** (l: T2DDouble; r: Single): T2DDouble; 
Operator ** (l: T2DDouble; r: UInt64): T2DDouble; 
Operator ** (l: T2DDouble; r: Int64): T2DDouble; 
Operator ** (l: T2DDouble; r: UInt32): T2DDouble; 
Operator ** (l: T2DDouble; r: Int32): T2DDouble; 
Operator ** (l: T2DDouble; r: UInt8): T2DDouble; 
Operator ** (l: T2DDouble; r: Int8): T2DDouble; 
Operator ** (l: T2DSingle; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DSingle; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DSingle; r: T2DUInt64): T2DSingle; 
Operator ** (l: T2DSingle; r: T2DInt64): T2DSingle; 
Operator ** (l: T2DSingle; r: T2DUInt32): T2DSingle; 
Operator ** (l: T2DSingle; r: T2DInt32): T2DSingle; 
Operator ** (l: T2DSingle; r: T2DUInt8): T2DSingle; 
Operator ** (l: T2DSingle; r: T2DInt8): T2DSingle; 
Operator ** (l: T2DSingle; r: Extended): T2DExtended; 
Operator ** (l: T2DSingle; r: Double): T2DDouble; 
Operator ** (l: T2DSingle; r: Single): T2DSingle; 
Operator ** (l: T2DSingle; r: UInt64): T2DSingle; 
Operator ** (l: T2DSingle; r: Int64): T2DSingle; 
Operator ** (l: T2DSingle; r: UInt32): T2DSingle; 
Operator ** (l: T2DSingle; r: Int32): T2DSingle; 
Operator ** (l: T2DSingle; r: UInt8): T2DSingle; 
Operator ** (l: T2DSingle; r: Int8): T2DSingle; 
Operator ** (l: T2DUInt64; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DUInt64; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DUInt64; r: T2DSingle): T2DSingle; 
Operator ** (l: T2DUInt64; r: T2DInt64): T2DUInt64; 
Operator ** (l: T2DUInt64; r: T2DUInt32): T2DUInt64; 
Operator ** (l: T2DUInt64; r: T2DInt32): T2DUInt64; 
Operator ** (l: T2DUInt64; r: T2DUInt8): T2DUInt64; 
Operator ** (l: T2DUInt64; r: T2DInt8): T2DUInt64; 
Operator ** (l: T2DUInt64; r: Extended): T2DExtended; 
Operator ** (l: T2DUInt64; r: Double): T2DDouble; 
Operator ** (l: T2DUInt64; r: Single): T2DSingle; 
Operator ** (l: T2DUInt64; r: UInt64): T2DUInt64; 
Operator ** (l: T2DUInt64; r: Int64): T2DUInt64; 
Operator ** (l: T2DUInt64; r: UInt32): T2DUInt64; 
Operator ** (l: T2DUInt64; r: Int32): T2DUInt64; 
Operator ** (l: T2DUInt64; r: UInt8): T2DUInt64; 
Operator ** (l: T2DUInt64; r: Int8): T2DUInt64; 
Operator ** (l: T2DInt64; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DInt64; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DInt64; r: T2DSingle): T2DSingle; 
Operator ** (l: T2DInt64; r: T2DUInt64): T2DUInt64; 
Operator ** (l: T2DInt64; r: T2DUInt32): T2DInt64; 
Operator ** (l: T2DInt64; r: T2DInt32): T2DInt64; 
Operator ** (l: T2DInt64; r: T2DUInt8): T2DInt64; 
Operator ** (l: T2DInt64; r: T2DInt8): T2DInt64; 
Operator ** (l: T2DInt64; r: Extended): T2DExtended; 
Operator ** (l: T2DInt64; r: Double): T2DDouble; 
Operator ** (l: T2DInt64; r: Single): T2DSingle; 
Operator ** (l: T2DInt64; r: UInt64): T2DUInt64; 
Operator ** (l: T2DInt64; r: Int64): T2DInt64; 
Operator ** (l: T2DInt64; r: UInt32): T2DInt64; 
Operator ** (l: T2DInt64; r: Int32): T2DInt64; 
Operator ** (l: T2DInt64; r: UInt8): T2DInt64; 
Operator ** (l: T2DInt64; r: Int8): T2DInt64; 
Operator ** (l: T2DUInt32; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DUInt32; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DUInt32; r: T2DSingle): T2DSingle; 
Operator ** (l: T2DUInt32; r: T2DUInt64): T2DUInt64; 
Operator ** (l: T2DUInt32; r: T2DInt64): T2DInt64; 
Operator ** (l: T2DUInt32; r: T2DInt32): T2DUInt32; 
Operator ** (l: T2DUInt32; r: T2DUInt8): T2DUInt32; 
Operator ** (l: T2DUInt32; r: T2DInt8): T2DUInt32; 
Operator ** (l: T2DUInt32; r: Extended): T2DExtended; 
Operator ** (l: T2DUInt32; r: Double): T2DDouble; 
Operator ** (l: T2DUInt32; r: Single): T2DSingle; 
Operator ** (l: T2DUInt32; r: UInt64): T2DUInt64; 
Operator ** (l: T2DUInt32; r: Int64): T2DInt64; 
Operator ** (l: T2DUInt32; r: UInt32): T2DUInt32; 
Operator ** (l: T2DUInt32; r: Int32): T2DUInt32; 
Operator ** (l: T2DUInt32; r: UInt8): T2DUInt32; 
Operator ** (l: T2DUInt32; r: Int8): T2DUInt32; 
Operator ** (l: T2DInt32; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DInt32; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DInt32; r: T2DSingle): T2DSingle; 
Operator ** (l: T2DInt32; r: T2DUInt64): T2DUInt64; 
Operator ** (l: T2DInt32; r: T2DInt64): T2DInt64; 
Operator ** (l: T2DInt32; r: T2DUInt32): T2DUInt32; 
Operator ** (l: T2DInt32; r: T2DUInt8): T2DInt32; 
Operator ** (l: T2DInt32; r: T2DInt8): T2DInt32; 
Operator ** (l: T2DInt32; r: Extended): T2DExtended; 
Operator ** (l: T2DInt32; r: Double): T2DDouble; 
Operator ** (l: T2DInt32; r: Single): T2DSingle; 
Operator ** (l: T2DInt32; r: UInt64): T2DUInt64; 
Operator ** (l: T2DInt32; r: Int64): T2DInt64; 
Operator ** (l: T2DInt32; r: UInt32): T2DUInt32; 
Operator ** (l: T2DInt32; r: Int32): T2DInt32; 
Operator ** (l: T2DInt32; r: UInt8): T2DInt32; 
Operator ** (l: T2DInt32; r: Int8): T2DInt32; 
Operator ** (l: T2DUInt8; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DUInt8; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DUInt8; r: T2DSingle): T2DSingle; 
Operator ** (l: T2DUInt8; r: T2DUInt64): T2DUInt64; 
Operator ** (l: T2DUInt8; r: T2DInt64): T2DInt64; 
Operator ** (l: T2DUInt8; r: T2DUInt32): T2DUInt32; 
Operator ** (l: T2DUInt8; r: T2DInt32): T2DInt32; 
Operator ** (l: T2DUInt8; r: T2DInt8): T2DUInt8; 
Operator ** (l: T2DUInt8; r: Extended): T2DExtended; 
Operator ** (l: T2DUInt8; r: Double): T2DDouble; 
Operator ** (l: T2DUInt8; r: Single): T2DSingle; 
Operator ** (l: T2DUInt8; r: UInt64): T2DUInt64; 
Operator ** (l: T2DUInt8; r: Int64): T2DInt64; 
Operator ** (l: T2DUInt8; r: UInt32): T2DUInt32; 
Operator ** (l: T2DUInt8; r: Int32): T2DInt32; 
Operator ** (l: T2DUInt8; r: UInt8): T2DUInt8; 
Operator ** (l: T2DUInt8; r: Int8): T2DUInt8; 
Operator ** (l: T2DInt8; r: T2DExtended): T2DExtended; 
Operator ** (l: T2DInt8; r: T2DDouble): T2DDouble; 
Operator ** (l: T2DInt8; r: T2DSingle): T2DSingle; 
Operator ** (l: T2DInt8; r: T2DUInt64): T2DUInt64; 
Operator ** (l: T2DInt8; r: T2DInt64): T2DInt64; 
Operator ** (l: T2DInt8; r: T2DUInt32): T2DUInt32; 
Operator ** (l: T2DInt8; r: T2DInt32): T2DInt32; 
Operator ** (l: T2DInt8; r: T2DUInt8): T2DUInt8; 
Operator ** (l: T2DInt8; r: Extended): T2DExtended; 
Operator ** (l: T2DInt8; r: Double): T2DDouble; 
Operator ** (l: T2DInt8; r: Single): T2DSingle; 
Operator ** (l: T2DInt8; r: UInt64): T2DUInt64; 
Operator ** (l: T2DInt8; r: Int64): T2DInt64; 
Operator ** (l: T2DInt8; r: UInt32): T2DUInt32; 
Operator ** (l: T2DInt8; r: Int32): T2DInt32; 
Operator ** (l: T2DInt8; r: UInt8): T2DUInt8; 
Operator ** (l: T2DInt8; r: Int8): T2DInt8; 
Operator ** (l: Extended; r: T2DExtended): T2DExtended; 
Operator ** (l: Extended; r: T2DDouble): T2DExtended; 
Operator ** (l: Extended; r: T2DSingle): T2DExtended; 
Operator ** (l: Extended; r: T2DUInt64): T2DExtended; 
Operator ** (l: Extended; r: T2DInt64): T2DExtended; 
Operator ** (l: Extended; r: T2DUInt32): T2DExtended; 
Operator ** (l: Extended; r: T2DInt32): T2DExtended; 
Operator ** (l: Extended; r: T2DUInt8): T2DExtended; 
Operator ** (l: Extended; r: T2DInt8): T2DExtended; 
Operator ** (l: Double; r: T2DExtended): T2DExtended; 
Operator ** (l: Double; r: T2DDouble): T2DDouble; 
Operator ** (l: Double; r: T2DSingle): T2DDouble; 
Operator ** (l: Double; r: T2DUInt64): T2DDouble; 
Operator ** (l: Double; r: T2DInt64): T2DDouble; 
Operator ** (l: Double; r: T2DUInt32): T2DDouble; 
Operator ** (l: Double; r: T2DInt32): T2DDouble; 
Operator ** (l: Double; r: T2DUInt8): T2DDouble; 
Operator ** (l: Double; r: T2DInt8): T2DDouble; 
Operator ** (l: Single; r: T2DExtended): T2DExtended; 
Operator ** (l: Single; r: T2DDouble): T2DDouble; 
Operator ** (l: Single; r: T2DSingle): T2DSingle; 
Operator ** (l: Single; r: T2DUInt64): T2DSingle; 
Operator ** (l: Single; r: T2DInt64): T2DSingle; 
Operator ** (l: Single; r: T2DUInt32): T2DSingle; 
Operator ** (l: Single; r: T2DInt32): T2DSingle; 
Operator ** (l: Single; r: T2DUInt8): T2DSingle; 
Operator ** (l: Single; r: T2DInt8): T2DSingle; 
Operator ** (l: UInt64; r: T2DExtended): T2DExtended; 
Operator ** (l: UInt64; r: T2DDouble): T2DDouble; 
Operator ** (l: UInt64; r: T2DSingle): T2DSingle; 
Operator ** (l: UInt64; r: T2DUInt64): T2DUInt64; 
Operator ** (l: UInt64; r: T2DInt64): T2DUInt64; 
Operator ** (l: UInt64; r: T2DUInt32): T2DUInt64; 
Operator ** (l: UInt64; r: T2DInt32): T2DUInt64; 
Operator ** (l: UInt64; r: T2DUInt8): T2DUInt64; 
Operator ** (l: UInt64; r: T2DInt8): T2DUInt64; 
Operator ** (l: Int64; r: T2DExtended): T2DExtended; 
Operator ** (l: Int64; r: T2DDouble): T2DDouble; 
Operator ** (l: Int64; r: T2DSingle): T2DSingle; 
Operator ** (l: Int64; r: T2DUInt64): T2DUInt64; 
Operator ** (l: Int64; r: T2DInt64): T2DInt64; 
Operator ** (l: Int64; r: T2DUInt32): T2DInt64; 
Operator ** (l: Int64; r: T2DInt32): T2DInt64; 
Operator ** (l: Int64; r: T2DUInt8): T2DInt64; 
Operator ** (l: Int64; r: T2DInt8): T2DInt64; 
Operator ** (l: UInt32; r: T2DExtended): T2DExtended; 
Operator ** (l: UInt32; r: T2DDouble): T2DDouble; 
Operator ** (l: UInt32; r: T2DSingle): T2DSingle; 
Operator ** (l: UInt32; r: T2DUInt64): T2DUInt64; 
Operator ** (l: UInt32; r: T2DInt64): T2DInt64; 
Operator ** (l: UInt32; r: T2DUInt32): T2DUInt32; 
Operator ** (l: UInt32; r: T2DInt32): T2DUInt32; 
Operator ** (l: UInt32; r: T2DUInt8): T2DUInt32; 
Operator ** (l: UInt32; r: T2DInt8): T2DUInt32; 
Operator ** (l: Int32; r: T2DExtended): T2DExtended; 
Operator ** (l: Int32; r: T2DDouble): T2DDouble; 
Operator ** (l: Int32; r: T2DSingle): T2DSingle; 
Operator ** (l: Int32; r: T2DUInt64): T2DUInt64; 
Operator ** (l: Int32; r: T2DInt64): T2DInt64; 
Operator ** (l: Int32; r: T2DUInt32): T2DUInt32; 
Operator ** (l: Int32; r: T2DInt32): T2DInt32; 
Operator ** (l: Int32; r: T2DUInt8): T2DInt32; 
Operator ** (l: Int32; r: T2DInt8): T2DInt32; 
Operator ** (l: UInt8; r: T2DExtended): T2DExtended; 
Operator ** (l: UInt8; r: T2DDouble): T2DDouble; 
Operator ** (l: UInt8; r: T2DSingle): T2DSingle; 
Operator ** (l: UInt8; r: T2DUInt64): T2DUInt64; 
Operator ** (l: UInt8; r: T2DInt64): T2DInt64; 
Operator ** (l: UInt8; r: T2DUInt32): T2DUInt32; 
Operator ** (l: UInt8; r: T2DInt32): T2DInt32; 
Operator ** (l: UInt8; r: T2DUInt8): T2DUInt8; 
Operator ** (l: UInt8; r: T2DInt8): T2DUInt8; 
Operator ** (l: Int8; r: T2DExtended): T2DExtended; 
Operator ** (l: Int8; r: T2DDouble): T2DDouble; 
Operator ** (l: Int8; r: T2DSingle): T2DSingle; 
Operator ** (l: Int8; r: T2DUInt64): T2DUInt64; 
Operator ** (l: Int8; r: T2DInt64): T2DInt64; 
Operator ** (l: Int8; r: T2DUInt32): T2DUInt32; 
Operator ** (l: Int8; r: T2DInt32): T2DInt32; 
Operator ** (l: Int8; r: T2DUInt8): T2DUInt8; 
Operator ** (l: Int8; r: T2DInt8): T2DInt8; 


Operator / (l: T2DExtended; r: T2DExtended): T2DExtended; 
Operator / (l: T2DDouble; r: T2DDouble): T2DDouble; 
Operator / (l: T2DSingle; r: T2DSingle): T2DSingle; 
Operator / (l: T2DUInt64; r: T2DUInt64): T2DUInt64; 
Operator / (l: T2DInt64; r: T2DInt64): T2DInt64; 
Operator / (l: T2DUInt32; r: T2DUInt32): T2DUInt32; 
Operator / (l: T2DInt32; r: T2DInt32): T2DInt32; 
Operator / (l: T2DUInt8; r: T2DUInt8): T2DUInt8; 
Operator / (l: T2DInt8; r: T2DInt8): T2DInt8; 
Operator / (l: T2DExtended; r: T2DDouble): T2DExtended; 
Operator / (l: T2DExtended; r: T2DSingle): T2DExtended; 
Operator / (l: T2DExtended; r: T2DUInt64): T2DExtended; 
Operator / (l: T2DExtended; r: T2DInt64): T2DExtended; 
Operator / (l: T2DExtended; r: T2DUInt32): T2DExtended; 
Operator / (l: T2DExtended; r: T2DInt32): T2DExtended; 
Operator / (l: T2DExtended; r: T2DUInt8): T2DExtended; 
Operator / (l: T2DExtended; r: T2DInt8): T2DExtended; 
Operator / (l: T2DExtended; r: Extended): T2DExtended; 
Operator / (l: T2DExtended; r: Double): T2DExtended; 
Operator / (l: T2DExtended; r: Single): T2DExtended; 
Operator / (l: T2DExtended; r: UInt64): T2DExtended; 
Operator / (l: T2DExtended; r: Int64): T2DExtended; 
Operator / (l: T2DExtended; r: UInt32): T2DExtended; 
Operator / (l: T2DExtended; r: Int32): T2DExtended; 
Operator / (l: T2DExtended; r: UInt8): T2DExtended; 
Operator / (l: T2DExtended; r: Int8): T2DExtended; 
Operator / (l: T2DDouble; r: T2DExtended): T2DExtended; 
Operator / (l: T2DDouble; r: T2DSingle): T2DDouble; 
Operator / (l: T2DDouble; r: T2DUInt64): T2DDouble; 
Operator / (l: T2DDouble; r: T2DInt64): T2DDouble; 
Operator / (l: T2DDouble; r: T2DUInt32): T2DDouble; 
Operator / (l: T2DDouble; r: T2DInt32): T2DDouble; 
Operator / (l: T2DDouble; r: T2DUInt8): T2DDouble; 
Operator / (l: T2DDouble; r: T2DInt8): T2DDouble; 
Operator / (l: T2DDouble; r: Extended): T2DExtended; 
Operator / (l: T2DDouble; r: Double): T2DDouble; 
Operator / (l: T2DDouble; r: Single): T2DDouble; 
Operator / (l: T2DDouble; r: UInt64): T2DDouble; 
Operator / (l: T2DDouble; r: Int64): T2DDouble; 
Operator / (l: T2DDouble; r: UInt32): T2DDouble; 
Operator / (l: T2DDouble; r: Int32): T2DDouble; 
Operator / (l: T2DDouble; r: UInt8): T2DDouble; 
Operator / (l: T2DDouble; r: Int8): T2DDouble; 
Operator / (l: T2DSingle; r: T2DExtended): T2DExtended; 
Operator / (l: T2DSingle; r: T2DDouble): T2DDouble; 
Operator / (l: T2DSingle; r: T2DUInt64): T2DSingle; 
Operator / (l: T2DSingle; r: T2DInt64): T2DSingle; 
Operator / (l: T2DSingle; r: T2DUInt32): T2DSingle; 
Operator / (l: T2DSingle; r: T2DInt32): T2DSingle; 
Operator / (l: T2DSingle; r: T2DUInt8): T2DSingle; 
Operator / (l: T2DSingle; r: T2DInt8): T2DSingle; 
Operator / (l: T2DSingle; r: Extended): T2DExtended; 
Operator / (l: T2DSingle; r: Double): T2DDouble; 
Operator / (l: T2DSingle; r: Single): T2DSingle; 
Operator / (l: T2DSingle; r: UInt64): T2DSingle; 
Operator / (l: T2DSingle; r: Int64): T2DSingle; 
Operator / (l: T2DSingle; r: UInt32): T2DSingle; 
Operator / (l: T2DSingle; r: Int32): T2DSingle; 
Operator / (l: T2DSingle; r: UInt8): T2DSingle; 
Operator / (l: T2DSingle; r: Int8): T2DSingle; 
Operator / (l: T2DUInt64; r: T2DExtended): T2DExtended; 
Operator / (l: T2DUInt64; r: T2DDouble): T2DDouble; 
Operator / (l: T2DUInt64; r: T2DSingle): T2DSingle; 
Operator / (l: T2DUInt64; r: T2DInt64): T2DUInt64; 
Operator / (l: T2DUInt64; r: T2DUInt32): T2DUInt64; 
Operator / (l: T2DUInt64; r: T2DInt32): T2DUInt64; 
Operator / (l: T2DUInt64; r: T2DUInt8): T2DUInt64; 
Operator / (l: T2DUInt64; r: T2DInt8): T2DUInt64; 
Operator / (l: T2DUInt64; r: Extended): T2DExtended; 
Operator / (l: T2DUInt64; r: Double): T2DDouble; 
Operator / (l: T2DUInt64; r: Single): T2DSingle; 
Operator / (l: T2DUInt64; r: UInt64): T2DUInt64; 
Operator / (l: T2DUInt64; r: Int64): T2DUInt64; 
Operator / (l: T2DUInt64; r: UInt32): T2DUInt64; 
Operator / (l: T2DUInt64; r: Int32): T2DUInt64; 
Operator / (l: T2DUInt64; r: UInt8): T2DUInt64; 
Operator / (l: T2DUInt64; r: Int8): T2DUInt64; 
Operator / (l: T2DInt64; r: T2DExtended): T2DExtended; 
Operator / (l: T2DInt64; r: T2DDouble): T2DDouble; 
Operator / (l: T2DInt64; r: T2DSingle): T2DSingle; 
Operator / (l: T2DInt64; r: T2DUInt64): T2DUInt64; 
Operator / (l: T2DInt64; r: T2DUInt32): T2DInt64; 
Operator / (l: T2DInt64; r: T2DInt32): T2DInt64; 
Operator / (l: T2DInt64; r: T2DUInt8): T2DInt64; 
Operator / (l: T2DInt64; r: T2DInt8): T2DInt64; 
Operator / (l: T2DInt64; r: Extended): T2DExtended; 
Operator / (l: T2DInt64; r: Double): T2DDouble; 
Operator / (l: T2DInt64; r: Single): T2DSingle; 
Operator / (l: T2DInt64; r: UInt64): T2DUInt64; 
Operator / (l: T2DInt64; r: Int64): T2DInt64; 
Operator / (l: T2DInt64; r: UInt32): T2DInt64; 
Operator / (l: T2DInt64; r: Int32): T2DInt64; 
Operator / (l: T2DInt64; r: UInt8): T2DInt64; 
Operator / (l: T2DInt64; r: Int8): T2DInt64; 
Operator / (l: T2DUInt32; r: T2DExtended): T2DExtended; 
Operator / (l: T2DUInt32; r: T2DDouble): T2DDouble; 
Operator / (l: T2DUInt32; r: T2DSingle): T2DSingle; 
Operator / (l: T2DUInt32; r: T2DUInt64): T2DUInt64; 
Operator / (l: T2DUInt32; r: T2DInt64): T2DInt64; 
Operator / (l: T2DUInt32; r: T2DInt32): T2DUInt32; 
Operator / (l: T2DUInt32; r: T2DUInt8): T2DUInt32; 
Operator / (l: T2DUInt32; r: T2DInt8): T2DUInt32; 
Operator / (l: T2DUInt32; r: Extended): T2DExtended; 
Operator / (l: T2DUInt32; r: Double): T2DDouble; 
Operator / (l: T2DUInt32; r: Single): T2DSingle; 
Operator / (l: T2DUInt32; r: UInt64): T2DUInt64; 
Operator / (l: T2DUInt32; r: Int64): T2DInt64; 
Operator / (l: T2DUInt32; r: UInt32): T2DUInt32; 
Operator / (l: T2DUInt32; r: Int32): T2DUInt32; 
Operator / (l: T2DUInt32; r: UInt8): T2DUInt32; 
Operator / (l: T2DUInt32; r: Int8): T2DUInt32; 
Operator / (l: T2DInt32; r: T2DExtended): T2DExtended; 
Operator / (l: T2DInt32; r: T2DDouble): T2DDouble; 
Operator / (l: T2DInt32; r: T2DSingle): T2DSingle; 
Operator / (l: T2DInt32; r: T2DUInt64): T2DUInt64; 
Operator / (l: T2DInt32; r: T2DInt64): T2DInt64; 
Operator / (l: T2DInt32; r: T2DUInt32): T2DUInt32; 
Operator / (l: T2DInt32; r: T2DUInt8): T2DInt32; 
Operator / (l: T2DInt32; r: T2DInt8): T2DInt32; 
Operator / (l: T2DInt32; r: Extended): T2DExtended; 
Operator / (l: T2DInt32; r: Double): T2DDouble; 
Operator / (l: T2DInt32; r: Single): T2DSingle; 
Operator / (l: T2DInt32; r: UInt64): T2DUInt64; 
Operator / (l: T2DInt32; r: Int64): T2DInt64; 
Operator / (l: T2DInt32; r: UInt32): T2DUInt32; 
Operator / (l: T2DInt32; r: Int32): T2DInt32; 
Operator / (l: T2DInt32; r: UInt8): T2DInt32; 
Operator / (l: T2DInt32; r: Int8): T2DInt32; 
Operator / (l: T2DUInt8; r: T2DExtended): T2DExtended; 
Operator / (l: T2DUInt8; r: T2DDouble): T2DDouble; 
Operator / (l: T2DUInt8; r: T2DSingle): T2DSingle; 
Operator / (l: T2DUInt8; r: T2DUInt64): T2DUInt64; 
Operator / (l: T2DUInt8; r: T2DInt64): T2DInt64; 
Operator / (l: T2DUInt8; r: T2DUInt32): T2DUInt32; 
Operator / (l: T2DUInt8; r: T2DInt32): T2DInt32; 
Operator / (l: T2DUInt8; r: T2DInt8): T2DUInt8; 
Operator / (l: T2DUInt8; r: Extended): T2DExtended; 
Operator / (l: T2DUInt8; r: Double): T2DDouble; 
Operator / (l: T2DUInt8; r: Single): T2DSingle; 
Operator / (l: T2DUInt8; r: UInt64): T2DUInt64; 
Operator / (l: T2DUInt8; r: Int64): T2DInt64; 
Operator / (l: T2DUInt8; r: UInt32): T2DUInt32; 
Operator / (l: T2DUInt8; r: Int32): T2DInt32; 
Operator / (l: T2DUInt8; r: UInt8): T2DUInt8; 
Operator / (l: T2DUInt8; r: Int8): T2DUInt8; 
Operator / (l: T2DInt8; r: T2DExtended): T2DExtended; 
Operator / (l: T2DInt8; r: T2DDouble): T2DDouble; 
Operator / (l: T2DInt8; r: T2DSingle): T2DSingle; 
Operator / (l: T2DInt8; r: T2DUInt64): T2DUInt64; 
Operator / (l: T2DInt8; r: T2DInt64): T2DInt64; 
Operator / (l: T2DInt8; r: T2DUInt32): T2DUInt32; 
Operator / (l: T2DInt8; r: T2DInt32): T2DInt32; 
Operator / (l: T2DInt8; r: T2DUInt8): T2DUInt8; 
Operator / (l: T2DInt8; r: Extended): T2DExtended; 
Operator / (l: T2DInt8; r: Double): T2DDouble; 
Operator / (l: T2DInt8; r: Single): T2DSingle; 
Operator / (l: T2DInt8; r: UInt64): T2DUInt64; 
Operator / (l: T2DInt8; r: Int64): T2DInt64; 
Operator / (l: T2DInt8; r: UInt32): T2DUInt32; 
Operator / (l: T2DInt8; r: Int32): T2DInt32; 
Operator / (l: T2DInt8; r: UInt8): T2DUInt8; 
Operator / (l: T2DInt8; r: Int8): T2DInt8; 
Operator / (l: Extended; r: T2DExtended): T2DExtended; 
Operator / (l: Extended; r: T2DDouble): T2DExtended; 
Operator / (l: Extended; r: T2DSingle): T2DExtended; 
Operator / (l: Extended; r: T2DUInt64): T2DExtended; 
Operator / (l: Extended; r: T2DInt64): T2DExtended; 
Operator / (l: Extended; r: T2DUInt32): T2DExtended; 
Operator / (l: Extended; r: T2DInt32): T2DExtended; 
Operator / (l: Extended; r: T2DUInt8): T2DExtended; 
Operator / (l: Extended; r: T2DInt8): T2DExtended; 
Operator / (l: Double; r: T2DExtended): T2DExtended; 
Operator / (l: Double; r: T2DDouble): T2DDouble; 
Operator / (l: Double; r: T2DSingle): T2DDouble; 
Operator / (l: Double; r: T2DUInt64): T2DDouble; 
Operator / (l: Double; r: T2DInt64): T2DDouble; 
Operator / (l: Double; r: T2DUInt32): T2DDouble; 
Operator / (l: Double; r: T2DInt32): T2DDouble; 
Operator / (l: Double; r: T2DUInt8): T2DDouble; 
Operator / (l: Double; r: T2DInt8): T2DDouble; 
Operator / (l: Single; r: T2DExtended): T2DExtended; 
Operator / (l: Single; r: T2DDouble): T2DDouble; 
Operator / (l: Single; r: T2DSingle): T2DSingle; 
Operator / (l: Single; r: T2DUInt64): T2DSingle; 
Operator / (l: Single; r: T2DInt64): T2DSingle; 
Operator / (l: Single; r: T2DUInt32): T2DSingle; 
Operator / (l: Single; r: T2DInt32): T2DSingle; 
Operator / (l: Single; r: T2DUInt8): T2DSingle; 
Operator / (l: Single; r: T2DInt8): T2DSingle; 
Operator / (l: UInt64; r: T2DExtended): T2DExtended; 
Operator / (l: UInt64; r: T2DDouble): T2DDouble; 
Operator / (l: UInt64; r: T2DSingle): T2DSingle; 
Operator / (l: UInt64; r: T2DUInt64): T2DUInt64; 
Operator / (l: UInt64; r: T2DInt64): T2DUInt64; 
Operator / (l: UInt64; r: T2DUInt32): T2DUInt64; 
Operator / (l: UInt64; r: T2DInt32): T2DUInt64; 
Operator / (l: UInt64; r: T2DUInt8): T2DUInt64; 
Operator / (l: UInt64; r: T2DInt8): T2DUInt64; 
Operator / (l: Int64; r: T2DExtended): T2DExtended; 
Operator / (l: Int64; r: T2DDouble): T2DDouble; 
Operator / (l: Int64; r: T2DSingle): T2DSingle; 
Operator / (l: Int64; r: T2DUInt64): T2DUInt64; 
Operator / (l: Int64; r: T2DInt64): T2DInt64; 
Operator / (l: Int64; r: T2DUInt32): T2DInt64; 
Operator / (l: Int64; r: T2DInt32): T2DInt64; 
Operator / (l: Int64; r: T2DUInt8): T2DInt64; 
Operator / (l: Int64; r: T2DInt8): T2DInt64; 
Operator / (l: UInt32; r: T2DExtended): T2DExtended; 
Operator / (l: UInt32; r: T2DDouble): T2DDouble; 
Operator / (l: UInt32; r: T2DSingle): T2DSingle; 
Operator / (l: UInt32; r: T2DUInt64): T2DUInt64; 
Operator / (l: UInt32; r: T2DInt64): T2DInt64; 
Operator / (l: UInt32; r: T2DUInt32): T2DUInt32; 
Operator / (l: UInt32; r: T2DInt32): T2DUInt32; 
Operator / (l: UInt32; r: T2DUInt8): T2DUInt32; 
Operator / (l: UInt32; r: T2DInt8): T2DUInt32; 
Operator / (l: Int32; r: T2DExtended): T2DExtended; 
Operator / (l: Int32; r: T2DDouble): T2DDouble; 
Operator / (l: Int32; r: T2DSingle): T2DSingle; 
Operator / (l: Int32; r: T2DUInt64): T2DUInt64; 
Operator / (l: Int32; r: T2DInt64): T2DInt64; 
Operator / (l: Int32; r: T2DUInt32): T2DUInt32; 
Operator / (l: Int32; r: T2DInt32): T2DInt32; 
Operator / (l: Int32; r: T2DUInt8): T2DInt32; 
Operator / (l: Int32; r: T2DInt8): T2DInt32; 
Operator / (l: UInt8; r: T2DExtended): T2DExtended; 
Operator / (l: UInt8; r: T2DDouble): T2DDouble; 
Operator / (l: UInt8; r: T2DSingle): T2DSingle; 
Operator / (l: UInt8; r: T2DUInt64): T2DUInt64; 
Operator / (l: UInt8; r: T2DInt64): T2DInt64; 
Operator / (l: UInt8; r: T2DUInt32): T2DUInt32; 
Operator / (l: UInt8; r: T2DInt32): T2DInt32; 
Operator / (l: UInt8; r: T2DUInt8): T2DUInt8; 
Operator / (l: UInt8; r: T2DInt8): T2DUInt8; 
Operator / (l: Int8; r: T2DExtended): T2DExtended; 
Operator / (l: Int8; r: T2DDouble): T2DDouble; 
Operator / (l: Int8; r: T2DSingle): T2DSingle; 
Operator / (l: Int8; r: T2DUInt64): T2DUInt64; 
Operator / (l: Int8; r: T2DInt64): T2DInt64; 
Operator / (l: Int8; r: T2DUInt32): T2DUInt32; 
Operator / (l: Int8; r: T2DInt32): T2DInt32; 
Operator / (l: Int8; r: T2DUInt8): T2DUInt8; 
Operator / (l: Int8; r: T2DInt8): T2DInt8; 


function Hypot(l: T2DExtended; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DUInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DDouble): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DSingle): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DUInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DUInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: T2DInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: Double): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: Single): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: UInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: Int64): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: UInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: Int32): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: UInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DExtended; r: Int8): T2DExtended; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DSingle): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DUInt64): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DInt64): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DUInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: T2DInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DDouble; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: Single): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: UInt64): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: Int64): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: UInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: Int32): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: UInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DDouble; r: Int8): T2DDouble; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DUInt64): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DInt64): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DUInt32): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DInt32): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DUInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: T2DInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DSingle; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DSingle; r: Single): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: UInt64): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: Int64): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: UInt32): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: Int32): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: UInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DSingle; r: Int8): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DUInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DUInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: T2DInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt64; r: Single): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt64; r: UInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: Int64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: UInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: Int32): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: UInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt64; r: Int8): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DUInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DUInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: T2DInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt64; r: Single): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt64; r: UInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: Int64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: UInt32): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: Int32): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: UInt8): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt64; r: Int8): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DUInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: T2DInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: Single): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt32; r: UInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: Int64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt32; r: UInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: Int32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: UInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt32; r: Int8): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DUInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: T2DInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt32; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: Single): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt32; r: UInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt32; r: Int64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt32; r: UInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: Int32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: UInt8): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt32; r: Int8): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: T2DInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt8; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt8; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: Single): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt8; r: UInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt8; r: Int64): T2DExtended; overload; cdecl;
function Hypot(l: T2DUInt8; r: UInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: Int32): T2DDouble; overload; cdecl;
function Hypot(l: T2DUInt8; r: UInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DUInt8; r: Int8): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt8; r: T2DUInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt8; r: Extended): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt8; r: Double): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt8; r: Single): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt8; r: UInt64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt8; r: Int64): T2DExtended; overload; cdecl;
function Hypot(l: T2DInt8; r: UInt32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt8; r: Int32): T2DDouble; overload; cdecl;
function Hypot(l: T2DInt8; r: UInt8): T2DSingle; overload; cdecl;
function Hypot(l: T2DInt8; r: Int8): T2DSingle; overload; cdecl;
function Hypot(l: Extended; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DDouble): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DSingle): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DUInt32): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DInt32): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DUInt8): T2DExtended; overload; cdecl;
function Hypot(l: Extended; r: T2DInt8): T2DExtended; overload; cdecl;
function Hypot(l: Double; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: Double; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: Double; r: T2DSingle): T2DDouble; overload; cdecl;
function Hypot(l: Double; r: T2DUInt64): T2DDouble; overload; cdecl;
function Hypot(l: Double; r: T2DInt64): T2DDouble; overload; cdecl;
function Hypot(l: Double; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: Double; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: Double; r: T2DUInt8): T2DDouble; overload; cdecl;
function Hypot(l: Double; r: T2DInt8): T2DDouble; overload; cdecl;
function Hypot(l: Single; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: Single; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: Single; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: Single; r: T2DUInt64): T2DSingle; overload; cdecl;
function Hypot(l: Single; r: T2DInt64): T2DSingle; overload; cdecl;
function Hypot(l: Single; r: T2DUInt32): T2DSingle; overload; cdecl;
function Hypot(l: Single; r: T2DInt32): T2DSingle; overload; cdecl;
function Hypot(l: Single; r: T2DUInt8): T2DSingle; overload; cdecl;
function Hypot(l: Single; r: T2DInt8): T2DSingle; overload; cdecl;
function Hypot(l: UInt64; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: UInt64; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: UInt64; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: UInt64; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: UInt64; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: UInt64; r: T2DUInt32): T2DExtended; overload; cdecl;
function Hypot(l: UInt64; r: T2DInt32): T2DExtended; overload; cdecl;
function Hypot(l: UInt64; r: T2DUInt8): T2DExtended; overload; cdecl;
function Hypot(l: UInt64; r: T2DInt8): T2DExtended; overload; cdecl;
function Hypot(l: Int64; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: Int64; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: Int64; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: Int64; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: Int64; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: Int64; r: T2DUInt32): T2DExtended; overload; cdecl;
function Hypot(l: Int64; r: T2DInt32): T2DExtended; overload; cdecl;
function Hypot(l: Int64; r: T2DUInt8): T2DExtended; overload; cdecl;
function Hypot(l: Int64; r: T2DInt8): T2DExtended; overload; cdecl;
function Hypot(l: UInt32; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: UInt32; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: UInt32; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: UInt32; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: UInt32; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: UInt32; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: UInt32; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: UInt32; r: T2DUInt8): T2DDouble; overload; cdecl;
function Hypot(l: UInt32; r: T2DInt8): T2DDouble; overload; cdecl;
function Hypot(l: Int32; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: Int32; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: Int32; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: Int32; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: Int32; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: Int32; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: Int32; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: Int32; r: T2DUInt8): T2DDouble; overload; cdecl;
function Hypot(l: Int32; r: T2DInt8): T2DDouble; overload; cdecl;
function Hypot(l: UInt8; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: UInt8; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: UInt8; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: UInt8; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: UInt8; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: UInt8; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: UInt8; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: UInt8; r: T2DUInt8): T2DSingle; overload; cdecl;
function Hypot(l: UInt8; r: T2DInt8): T2DSingle; overload; cdecl;
function Hypot(l: Int8; r: T2DExtended): T2DExtended; overload; cdecl;
function Hypot(l: Int8; r: T2DDouble): T2DDouble; overload; cdecl;
function Hypot(l: Int8; r: T2DSingle): T2DSingle; overload; cdecl;
function Hypot(l: Int8; r: T2DUInt64): T2DExtended; overload; cdecl;
function Hypot(l: Int8; r: T2DInt64): T2DExtended; overload; cdecl;
function Hypot(l: Int8; r: T2DUInt32): T2DDouble; overload; cdecl;
function Hypot(l: Int8; r: T2DInt32): T2DDouble; overload; cdecl;
function Hypot(l: Int8; r: T2DUInt8): T2DSingle; overload; cdecl;
function Hypot(l: Int8; r: T2DInt8): T2DSingle; overload; cdecl;


function Modulo(l: T2DExtended; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DInt32): T2DInt32; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DUInt8): T2DUInt8; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DInt8): T2DInt8; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DDouble): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DSingle): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DUInt64): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DInt64): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DUInt32): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DInt32): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DUInt8): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: T2DInt8): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: Double): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: Single): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: UInt64): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: Int64): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: UInt32): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: Int32): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: UInt8): T2DExtended; overload; cdecl;
function Modulo(l: T2DExtended; r: Int8): T2DExtended; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DSingle): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DUInt64): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DInt64): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DUInt32): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DInt32): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DUInt8): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: T2DInt8): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DDouble; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: Single): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: UInt64): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: Int64): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: UInt32): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: Int32): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: UInt8): T2DDouble; overload; cdecl;
function Modulo(l: T2DDouble; r: Int8): T2DDouble; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DUInt64): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DInt64): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DUInt32): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DInt32): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DUInt8): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: T2DInt8): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DSingle; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DSingle; r: Single): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: UInt64): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: Int64): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: UInt32): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: Int32): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: UInt8): T2DSingle; overload; cdecl;
function Modulo(l: T2DSingle; r: Int8): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DUInt32): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DInt32): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DUInt8): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: T2DInt8): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DUInt64; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DUInt64; r: Single): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt64; r: UInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: Int64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: UInt32): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: Int32): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: UInt8): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt64; r: Int8): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DUInt32): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DInt32): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DUInt8): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: T2DInt8): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DInt64; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DInt64; r: Single): T2DSingle; overload; cdecl;
function Modulo(l: T2DInt64; r: UInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: Int64): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: UInt32): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: Int32): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: UInt8): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt64; r: Int8): T2DInt64; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DUInt8): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt32; r: T2DInt8): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt32; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DUInt32; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DUInt32; r: Single): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt32; r: UInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt32; r: Int64): T2DInt64; overload; cdecl;
function Modulo(l: T2DUInt32; r: UInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt32; r: Int32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt32; r: UInt8): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt32; r: Int8): T2DUInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DUInt8): T2DInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: T2DInt8): T2DInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DInt32; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DInt32; r: Single): T2DSingle; overload; cdecl;
function Modulo(l: T2DInt32; r: UInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt32; r: Int64): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt32; r: UInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: Int32): T2DInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: UInt8): T2DInt32; overload; cdecl;
function Modulo(l: T2DInt32; r: Int8): T2DInt32; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DInt32): T2DInt32; overload; cdecl;
function Modulo(l: T2DUInt8; r: T2DInt8): T2DUInt8; overload; cdecl;
function Modulo(l: T2DUInt8; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DUInt8; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DUInt8; r: Single): T2DSingle; overload; cdecl;
function Modulo(l: T2DUInt8; r: UInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DUInt8; r: Int64): T2DInt64; overload; cdecl;
function Modulo(l: T2DUInt8; r: UInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DUInt8; r: Int32): T2DInt32; overload; cdecl;
function Modulo(l: T2DUInt8; r: UInt8): T2DUInt8; overload; cdecl;
function Modulo(l: T2DUInt8; r: Int8): T2DUInt8; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DInt32): T2DInt32; overload; cdecl;
function Modulo(l: T2DInt8; r: T2DUInt8): T2DUInt8; overload; cdecl;
function Modulo(l: T2DInt8; r: Extended): T2DExtended; overload; cdecl;
function Modulo(l: T2DInt8; r: Double): T2DDouble; overload; cdecl;
function Modulo(l: T2DInt8; r: Single): T2DSingle; overload; cdecl;
function Modulo(l: T2DInt8; r: UInt64): T2DUInt64; overload; cdecl;
function Modulo(l: T2DInt8; r: Int64): T2DInt64; overload; cdecl;
function Modulo(l: T2DInt8; r: UInt32): T2DUInt32; overload; cdecl;
function Modulo(l: T2DInt8; r: Int32): T2DInt32; overload; cdecl;
function Modulo(l: T2DInt8; r: UInt8): T2DUInt8; overload; cdecl;
function Modulo(l: T2DInt8; r: Int8): T2DInt8; overload; cdecl;
function Modulo(l: Extended; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DDouble): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DSingle): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DUInt64): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DInt64): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DUInt32): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DInt32): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DUInt8): T2DExtended; overload; cdecl;
function Modulo(l: Extended; r: T2DInt8): T2DExtended; overload; cdecl;
function Modulo(l: Double; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: Double; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: Double; r: T2DSingle): T2DDouble; overload; cdecl;
function Modulo(l: Double; r: T2DUInt64): T2DDouble; overload; cdecl;
function Modulo(l: Double; r: T2DInt64): T2DDouble; overload; cdecl;
function Modulo(l: Double; r: T2DUInt32): T2DDouble; overload; cdecl;
function Modulo(l: Double; r: T2DInt32): T2DDouble; overload; cdecl;
function Modulo(l: Double; r: T2DUInt8): T2DDouble; overload; cdecl;
function Modulo(l: Double; r: T2DInt8): T2DDouble; overload; cdecl;
function Modulo(l: Single; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: Single; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: Single; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: Single; r: T2DUInt64): T2DSingle; overload; cdecl;
function Modulo(l: Single; r: T2DInt64): T2DSingle; overload; cdecl;
function Modulo(l: Single; r: T2DUInt32): T2DSingle; overload; cdecl;
function Modulo(l: Single; r: T2DInt32): T2DSingle; overload; cdecl;
function Modulo(l: Single; r: T2DUInt8): T2DSingle; overload; cdecl;
function Modulo(l: Single; r: T2DInt8): T2DSingle; overload; cdecl;
function Modulo(l: UInt64; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: UInt64; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: UInt64; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: UInt64; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: UInt64; r: T2DInt64): T2DUInt64; overload; cdecl;
function Modulo(l: UInt64; r: T2DUInt32): T2DUInt64; overload; cdecl;
function Modulo(l: UInt64; r: T2DInt32): T2DUInt64; overload; cdecl;
function Modulo(l: UInt64; r: T2DUInt8): T2DUInt64; overload; cdecl;
function Modulo(l: UInt64; r: T2DInt8): T2DUInt64; overload; cdecl;
function Modulo(l: Int64; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: Int64; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: Int64; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: Int64; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: Int64; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: Int64; r: T2DUInt32): T2DInt64; overload; cdecl;
function Modulo(l: Int64; r: T2DInt32): T2DInt64; overload; cdecl;
function Modulo(l: Int64; r: T2DUInt8): T2DInt64; overload; cdecl;
function Modulo(l: Int64; r: T2DInt8): T2DInt64; overload; cdecl;
function Modulo(l: UInt32; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: UInt32; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: UInt32; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: UInt32; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: UInt32; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: UInt32; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: UInt32; r: T2DInt32): T2DUInt32; overload; cdecl;
function Modulo(l: UInt32; r: T2DUInt8): T2DUInt32; overload; cdecl;
function Modulo(l: UInt32; r: T2DInt8): T2DUInt32; overload; cdecl;
function Modulo(l: Int32; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: Int32; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: Int32; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: Int32; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: Int32; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: Int32; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: Int32; r: T2DInt32): T2DInt32; overload; cdecl;
function Modulo(l: Int32; r: T2DUInt8): T2DInt32; overload; cdecl;
function Modulo(l: Int32; r: T2DInt8): T2DInt32; overload; cdecl;
function Modulo(l: UInt8; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: UInt8; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: UInt8; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: UInt8; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: UInt8; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: UInt8; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: UInt8; r: T2DInt32): T2DInt32; overload; cdecl;
function Modulo(l: UInt8; r: T2DUInt8): T2DUInt8; overload; cdecl;
function Modulo(l: UInt8; r: T2DInt8): T2DUInt8; overload; cdecl;
function Modulo(l: Int8; r: T2DExtended): T2DExtended; overload; cdecl;
function Modulo(l: Int8; r: T2DDouble): T2DDouble; overload; cdecl;
function Modulo(l: Int8; r: T2DSingle): T2DSingle; overload; cdecl;
function Modulo(l: Int8; r: T2DUInt64): T2DUInt64; overload; cdecl;
function Modulo(l: Int8; r: T2DInt64): T2DInt64; overload; cdecl;
function Modulo(l: Int8; r: T2DUInt32): T2DUInt32; overload; cdecl;
function Modulo(l: Int8; r: T2DInt32): T2DInt32; overload; cdecl;
function Modulo(l: Int8; r: T2DUInt8): T2DUInt8; overload; cdecl;
function Modulo(l: Int8; r: T2DInt8): T2DInt8; overload; cdecl;


function ToInt64(mat: T2DExtended): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DDouble): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DSingle): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DUInt64): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DInt64): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DUInt32): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DInt32): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DUInt8): T2DInt64; overload; cdecl;
function ToInt64(mat: T2DInt8): T2DInt64; overload; cdecl;


function ToByte(mat: T2DExtended): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DDouble): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DSingle): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DUInt64): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DInt64): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DUInt32): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DInt32): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DUInt8): T2DUInt8; overload; cdecl;
function ToByte(mat: T2DInt8): T2DUInt8; overload; cdecl;


function ToChar(mat: T2DExtended): T2DInt8; overload; cdecl;
function ToChar(mat: T2DDouble): T2DInt8; overload; cdecl;
function ToChar(mat: T2DSingle): T2DInt8; overload; cdecl;
function ToChar(mat: T2DUInt64): T2DInt8; overload; cdecl;
function ToChar(mat: T2DInt64): T2DInt8; overload; cdecl;
function ToChar(mat: T2DUInt32): T2DInt8; overload; cdecl;
function ToChar(mat: T2DInt32): T2DInt8; overload; cdecl;
function ToChar(mat: T2DUInt8): T2DInt8; overload; cdecl;
function ToChar(mat: T2DInt8): T2DInt8; overload; cdecl;


function ToInt(mat: T2DExtended): T2DInt32; overload; cdecl;
function ToInt(mat: T2DDouble): T2DInt32; overload; cdecl;
function ToInt(mat: T2DSingle): T2DInt32; overload; cdecl;
function ToInt(mat: T2DUInt64): T2DInt32; overload; cdecl;
function ToInt(mat: T2DInt64): T2DInt32; overload; cdecl;
function ToInt(mat: T2DUInt32): T2DInt32; overload; cdecl;
function ToInt(mat: T2DInt32): T2DInt32; overload; cdecl;
function ToInt(mat: T2DUInt8): T2DInt32; overload; cdecl;
function ToInt(mat: T2DInt8): T2DInt32; overload; cdecl;


function ToDouble(mat: T2DExtended): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DDouble): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DSingle): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DUInt64): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DInt64): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DUInt32): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DInt32): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DUInt8): T2DDouble; overload; cdecl;
function ToDouble(mat: T2DInt8): T2DDouble; overload; cdecl;


function ToExtended(mat: T2DExtended): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DDouble): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DSingle): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DUInt64): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DInt64): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DUInt32): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DInt32): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DUInt8): T2DExtended; overload; cdecl;
function ToExtended(mat: T2DInt8): T2DExtended; overload; cdecl;


function ToSingle(mat: T2DExtended): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DDouble): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DSingle): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DUInt64): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DInt64): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DUInt32): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DInt32): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DUInt8): T2DSingle; overload; cdecl;
function ToSingle(mat: T2DInt8): T2DSingle; overload; cdecl;


function ArcTan(mat: T2DExtended): T2DExtended; overload; cdecl;
function ArcTan(mat: T2DDouble): T2DDouble; overload; cdecl;
function ArcTan(mat: T2DSingle): T2DSingle; overload; cdecl;
function ArcTan(mat: T2DUInt64): T2DExtended; overload; cdecl;
function ArcTan(mat: T2DInt64): T2DExtended; overload; cdecl;
function ArcTan(mat: T2DUInt32): T2DDouble; overload; cdecl;
function ArcTan(mat: T2DInt32): T2DDouble; overload; cdecl;
function ArcTan(mat: T2DUInt8): T2DSingle; overload; cdecl;
function ArcTan(mat: T2DInt8): T2DSingle; overload; cdecl;


function CeilF(mat: T2DExtended): T2DExtended; overload; cdecl;
function CeilF(mat: T2DDouble): T2DDouble; overload; cdecl;
function CeilF(mat: T2DSingle): T2DSingle; overload; cdecl;
function CeilF(mat: T2DUInt64): T2DExtended; overload; cdecl;
function CeilF(mat: T2DInt64): T2DExtended; overload; cdecl;
function CeilF(mat: T2DUInt32): T2DDouble; overload; cdecl;
function CeilF(mat: T2DInt32): T2DDouble; overload; cdecl;
function CeilF(mat: T2DUInt8): T2DSingle; overload; cdecl;
function CeilF(mat: T2DInt8): T2DSingle; overload; cdecl;


function Ceil(mat: T2DExtended): T2DInt64; overload; cdecl;
function Ceil(mat: T2DDouble): T2DInt64; overload; cdecl;
function Ceil(mat: T2DSingle): T2DInt64; overload; cdecl;
function Ceil(mat: T2DUInt64): T2DInt64; overload; cdecl;
function Ceil(mat: T2DInt64): T2DInt64; overload; cdecl;
function Ceil(mat: T2DUInt32): T2DUInt32; overload; cdecl;
function Ceil(mat: T2DInt32): T2DInt32; overload; cdecl;
function Ceil(mat: T2DUInt8): T2DUInt8; overload; cdecl;
function Ceil(mat: T2DInt8): T2DInt8; overload; cdecl;


function Floor(mat: T2DExtended): T2DInt64; overload; cdecl;
function Floor(mat: T2DDouble): T2DInt64; overload; cdecl;
function Floor(mat: T2DSingle): T2DInt64; overload; cdecl;
function Floor(mat: T2DUInt64): T2DInt64; overload; cdecl;
function Floor(mat: T2DInt64): T2DInt64; overload; cdecl;
function Floor(mat: T2DUInt32): T2DUInt32; overload; cdecl;
function Floor(mat: T2DInt32): T2DInt32; overload; cdecl;
function Floor(mat: T2DUInt8): T2DUInt8; overload; cdecl;
function Floor(mat: T2DInt8): T2DInt8; overload; cdecl;


function FloorF(mat: T2DExtended): T2DExtended; overload; cdecl;
function FloorF(mat: T2DDouble): T2DDouble; overload; cdecl;
function FloorF(mat: T2DSingle): T2DSingle; overload; cdecl;
function FloorF(mat: T2DUInt64): T2DExtended; overload; cdecl;
function FloorF(mat: T2DInt64): T2DExtended; overload; cdecl;
function FloorF(mat: T2DUInt32): T2DDouble; overload; cdecl;
function FloorF(mat: T2DInt32): T2DDouble; overload; cdecl;
function FloorF(mat: T2DUInt8): T2DSingle; overload; cdecl;
function FloorF(mat: T2DInt8): T2DSingle; overload; cdecl;


function RoundF(mat: T2DExtended): T2DExtended; overload; cdecl;
function RoundF(mat: T2DDouble): T2DDouble; overload; cdecl;
function RoundF(mat: T2DSingle): T2DSingle; overload; cdecl;
function RoundF(mat: T2DUInt64): T2DExtended; overload; cdecl;
function RoundF(mat: T2DInt64): T2DExtended; overload; cdecl;
function RoundF(mat: T2DUInt32): T2DDouble; overload; cdecl;
function RoundF(mat: T2DInt32): T2DDouble; overload; cdecl;
function RoundF(mat: T2DUInt8): T2DSingle; overload; cdecl;
function RoundF(mat: T2DInt8): T2DSingle; overload; cdecl;


function Round(mat: T2DExtended): T2DInt64; overload; cdecl;
function Round(mat: T2DDouble): T2DInt64; overload; cdecl;
function Round(mat: T2DSingle): T2DInt64; overload; cdecl;
function Round(mat: T2DUInt64): T2DInt64; overload; cdecl;
function Round(mat: T2DInt64): T2DInt64; overload; cdecl;
function Round(mat: T2DUInt32): T2DUInt32; overload; cdecl;
function Round(mat: T2DInt32): T2DInt32; overload; cdecl;
function Round(mat: T2DUInt8): T2DUInt8; overload; cdecl;
function Round(mat: T2DInt8): T2DInt8; overload; cdecl;


function Sqr(mat: T2DExtended): T2DExtended; overload; cdecl;
function Sqr(mat: T2DDouble): T2DDouble; overload; cdecl;
function Sqr(mat: T2DSingle): T2DSingle; overload; cdecl;
function Sqr(mat: T2DUInt64): T2DUInt64; overload; cdecl;
function Sqr(mat: T2DInt64): T2DInt64; overload; cdecl;
function Sqr(mat: T2DUInt32): T2DUInt32; overload; cdecl;
function Sqr(mat: T2DInt32): T2DInt32; overload; cdecl;
function Sqr(mat: T2DUInt8): T2DInt32; overload; cdecl;
function Sqr(mat: T2DInt8): T2DInt32; overload; cdecl;


function FSqr(mat: T2DExtended): T2DExtended; overload; cdecl;
function FSqr(mat: T2DDouble): T2DDouble; overload; cdecl;
function FSqr(mat: T2DSingle): T2DSingle; overload; cdecl;
function FSqr(mat: T2DUInt64): T2DExtended; overload; cdecl;
function FSqr(mat: T2DInt64): T2DExtended; overload; cdecl;
function FSqr(mat: T2DUInt32): T2DDouble; overload; cdecl;
function FSqr(mat: T2DInt32): T2DDouble; overload; cdecl;
function FSqr(mat: T2DUInt8): T2DSingle; overload; cdecl;
function FSqr(mat: T2DInt8): T2DSingle; overload; cdecl;


function SqrtF64(mat: T2DExtended): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DDouble): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DSingle): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DUInt64): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DInt64): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DUInt32): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DInt32): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DUInt8): T2DDouble; overload; cdecl;
function SqrtF64(mat: T2DInt8): T2DDouble; overload; cdecl;


function Sqrt(mat: T2DExtended): T2DExtended; overload; cdecl;
function Sqrt(mat: T2DDouble): T2DDouble; overload; cdecl;
function Sqrt(mat: T2DSingle): T2DSingle; overload; cdecl;
function Sqrt(mat: T2DUInt64): T2DExtended; overload; cdecl;
function Sqrt(mat: T2DInt64): T2DExtended; overload; cdecl;
function Sqrt(mat: T2DUInt32): T2DDouble; overload; cdecl;
function Sqrt(mat: T2DInt32): T2DDouble; overload; cdecl;
function Sqrt(mat: T2DUInt8): T2DSingle; overload; cdecl;
function Sqrt(mat: T2DInt8): T2DSingle; overload; cdecl;


function SqrtF80(mat: T2DExtended): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DDouble): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DSingle): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DUInt64): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DInt64): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DUInt32): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DInt32): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DUInt8): T2DExtended; overload; cdecl;
function SqrtF80(mat: T2DInt8): T2DExtended; overload; cdecl;


function SqrtF32(mat: T2DExtended): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DDouble): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DSingle): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DUInt64): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DInt64): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DUInt32): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DInt32): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DUInt8): T2DSingle; overload; cdecl;
function SqrtF32(mat: T2DInt8): T2DSingle; overload; cdecl;


function Trunc(mat: T2DExtended): T2DInt64; overload; cdecl;
function Trunc(mat: T2DDouble): T2DInt64; overload; cdecl;
function Trunc(mat: T2DSingle): T2DInt64; overload; cdecl;
function Trunc(mat: T2DUInt64): T2DInt64; overload; cdecl;
function Trunc(mat: T2DInt64): T2DInt64; overload; cdecl;
function Trunc(mat: T2DUInt32): T2DUInt32; overload; cdecl;
function Trunc(mat: T2DInt32): T2DInt32; overload; cdecl;
function Trunc(mat: T2DUInt8): T2DUInt8; overload; cdecl;
function Trunc(mat: T2DInt8): T2DInt8; overload; cdecl;


function TruncF(mat: T2DExtended): T2DExtended; overload; cdecl;
function TruncF(mat: T2DDouble): T2DDouble; overload; cdecl;
function TruncF(mat: T2DSingle): T2DSingle; overload; cdecl;
function TruncF(mat: T2DUInt64): T2DExtended; overload; cdecl;
function TruncF(mat: T2DInt64): T2DExtended; overload; cdecl;
function TruncF(mat: T2DUInt32): T2DDouble; overload; cdecl;
function TruncF(mat: T2DInt32): T2DDouble; overload; cdecl;
function TruncF(mat: T2DUInt8): T2DSingle; overload; cdecl;
function TruncF(mat: T2DInt8): T2DSingle; overload; cdecl;




implementation

{$I MatrixMath/MAT_ADD.pas}
{$I MatrixMath/MAT_MUL.pas}
{$I MatrixMath/MAT_SUB.pas}
{$I MatrixMath/MAT_POW.pas}
{$I MatrixMath/MAT_DIV.pas}
{$I MatrixMath/MAT_Hypot.pas}
{$I MatrixMath/MAT_Modulo.pas}
{$I MatrixMath/MAT_ToInt64.pas}
{$I MatrixMath/MAT_ToByte.pas}
{$I MatrixMath/MAT_ToChar.pas}
{$I MatrixMath/MAT_ToInt.pas}
{$I MatrixMath/MAT_ToDouble.pas}
{$I MatrixMath/MAT_ToExtended.pas}
{$I MatrixMath/MAT_ToSingle.pas}
{$I MatrixMath/MAT_ArcTan.pas}
{$I MatrixMath/MAT_CeilF.pas}
{$I MatrixMath/MAT_Ceil.pas}
{$I MatrixMath/MAT_Floor.pas}
{$I MatrixMath/MAT_FloorF.pas}
{$I MatrixMath/MAT_RoundF.pas}
{$I MatrixMath/MAT_Round.pas}
{$I MatrixMath/MAT_Sqr.pas}
{$I MatrixMath/MAT_FSqr.pas}
{$I MatrixMath/MAT_SqrtF64.pas}
{$I MatrixMath/MAT_Sqrt.pas}
{$I MatrixMath/MAT_SqrtF80.pas}
{$I MatrixMath/MAT_SqrtF32.pas}
{$I MatrixMath/MAT_Trunc.pas}
{$I MatrixMath/MAT_TruncF.pas}


End.